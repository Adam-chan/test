	<div class="container-fluid">
		<div class="row">
			<div class="col-md-8">
				<div>
					<table class="table table-striped table-bordered"
						style="width: 1000px">
						<thead style="border: 1px solid;">
							<tr>
								<td colspan="10">单元信息</td>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td>单元数： <input type="text" style="width: 80px"
									id="unitCount" value="8">
									<button class="btn btn-xs btn-icon btn-blue" onclick="plus()">
										<i class="glyphicon glyphicon-plus"></i>
									</button>
									<button class="btn btn-xs btn-icon btn-blue" onclick="minus()">
										<i class="glyphicon glyphicon-minus"></i>
									</button>单元编号类型：<input type="radio" name="type" id="number"
									value="number" /> 阿拉伯数字编号<input type="radio" name="type"
									id="char" value="char" /> 字母编号
								</td>
							</tr>
							<tr>
								<td>单元前缀：<input type="text" style="width: 80px"
									id="unitPre"> 单元后缀：<input type="text"
									style="width: 80px" id="unitSuf"> 号段起始：<input
									id="numStart" type="text" style="width: 80px" value="1">
									号段终止：<input id="numEnd" type="text" style="width: 80px"
									value="8">
								</td>
							</tr>
							<tr>
								<td>梯户数：<input type="text" style="width: 40px" id="num1">梯
									<input type="text" style="width: 40px" id="num2" value="8">户
									地上楼层起：<input type="text" style="width: 80px" id="num3"
									value="3"> 地上总层数：<input type="text" style="width: 80px"
									id="num4" value="8"> 地下楼层：<input type="text"
									style="width: 80px" id="num5">
								</td>
							</tr>
							<tr>
								<td>忽略楼层数：<input type="text" style="width: 80px" id="num6"></td>
							</tr>
						</tbody>
					</table>
				</div>


				<div>
					<table class="table table-striped table-bordered"
						style="width: 1000px " id="roomInformationTable">
						<thead style="border: 1px solid;">
							<tr>
								<td style="width: 90%">房间信息</td>
								<td style="width: 10%" onclick="showRoomInfo()"><a>展开房间</a>
								</td>
							</tr>
						</thead>
						<tbody id="roomInfomation">
							<tr>
								<td colspan="2">生成规则: <input type="radio" name="rule"
									value="floor" />单层排序 <input type="radio" name="rule"
									value="unit" />整单元排序 <input type="radio" name="floor"
									id="floorFill" />楼层"0"补位 <input type="radio" name="room"
									id="roomFill" />房间"0"补位 <span style="font-size:12px;">&nbsp;&nbsp;&nbsp;</span>忽略数字：<input
									type="text" id="num" />
								</td>
							</tr>
							<tr>
								<td colspan="2">前缀：<input type="text" style="width: 80px"
									id="prefix" /> <input type="checkbox" id="floorNum">+楼层号
									<input type="checkbox" id="connect">+"-"连接 <span
									style="font-size:12px;">&nbsp;&nbsp;&nbsp;</span>区间：<input
									type="text" style="width: 60px" id="start" />——<input
									type="text" style="width: 60px" id="end" /><span
									style="font-size:12px;">&nbsp;&nbsp;&nbsp;</span>+后缀：<input
									type="text" style="width: 80px" id="suffix">
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
					<table class="table table-striped table-bordered"
						style="width: 1000px;">
						<thead style="border: 1px solid;">
							<tr>
								<td style="width: 90%;">房间预览</td>
								<td style="width: 10%" onclick="showRoom()">生成房间</td>
							</tr>
						</thead>
					</table>
				</div>
				<div id="getTbId" style="display: none;"></div>
				<div id="getTrId" style="display: none;"></div>
				<div id="getTdId" style="display: none;"></div>
				<div id="getBuildingId" style="display: none;"></div>
				<div id="creatRoom" style="display: none;width: 1000px;">
					<div>
						<button class="btn btn-xs btn-icon btn-blue" onclick="">
							<i class="ace-iconfafa-trash-obigger-120orange"> </i> 修改
						</button>
						<button class="btn btn-xs btn-icon btn-blue"
							onclick="restoreRoom()">
							<i class="ace-iconfafa-trash-obigger-120orange"> </i> 新增房间
						</button>
						<button class="btn btn-xs btn-icon btn-blue"
							onclick="deleteRoom()">
							<i class="ace-iconfafa-trash-obigger-120orange"> </i> 删除房间
						</button>
						<button class="btn btn-xs btn-icon btn-blue" onclick="">
							<i class="ace-iconfafa-trash-obigger-120orange"> </i> 批量修改
						</button>
					</div>
					<div style="position: relative; overflow: auto; height: 400px;"
						id="hiddenLayer">
						<div style="position:absolute;" id="roomsView"></div>
					</div>
					<button class="btn btn-xs btn-icon btn-blue" id="save"
						onclick="saveRooms()">
						<span><i> </i></span>保存
					</button>
				</div>
			</div>
		</div>
	</div>

	<script type="text/javascript">
		var charArr = [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K",
				"L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W",
				"X", "Y", "Z" ];

		//加号
		function plus() {

		}

		//减号
		function minus() {

		}

		//展开房间
		function showRoomInfo() {
			var obj = $("#roomInfomation");
			obj.toggle();
		}

		var flag = true;

		//生成房间
		function showRoom() {
			var rule = $("input[name='rule']:checked ").val();//生成规则
			if (rule == "floor") {
				showDcRoom();
			} else if (rule == "unit") {
				showDyRoom();
			} else {
				alert("生成规则为必选项");
				return;
			}
		}

		var dyArr = new Array();//单元数组
		var str = "";
		//单层排序
		function showDcRoom() {
			var start = $("#start").val();//区间开始
			var end = $("#end").val();//区间结束
			var num2 = $("#num2").val();//户数
			var unit = $("#unitCount").val();//单元数
			var unitPre = $("#unitPre").val();//单元前缀
			var unitSuf = $("#unitSuf").val();//单元后缀
			var num1 = $("#num1").val();//梯数
			var num = $("#num").val(); //忽略房间号
			var num3 = $("#num3").val();//地上楼层起
			var num4 = $("#num4").val();//地上总层数
			var num5 = $("#num5").val();//地下楼层
			var numStart = $("#numStart").val();//号段起始
			var numEnd = $("#numEnd").val();//号段终止
			var prefix = $("#prefix").val();//前缀
			var suffix = $("#suffix").val();//前缀
			var endLen = end.length; //区间结束的长度
			var num6 = $("#num6").val();//忽略楼层
			var floor = $("input[id='floorFill']:checked ").val();//楼层0补位
			var room = $("input[id='roomFill']:checked ").val();//房间0补位
			var floorNum = $("input[id='floorNum']:checked ").val();//+楼层号
			var connect = $("input[id='connect']:checked ").val();//+"-"连接
			var rule = $("input[name='rule']:checked ").val();//生成规则
			var num7 = parseInt(num4) + parseInt(num3) - 1;//地上楼层止
			var type = $("input[name='type']:checked ").val();//类型
			var neglectFloorsArr = new Array();//忽略楼层数组
			var neglectRoomsArr = new Array();//忽略房间数组
			var roomsList = new Array();//房间信息数组
			var unitsList = new Array();//单元信息数组
			//-------------------校验开始-----------------------
			if (unit == "" || unit == null) {
				alert("单元数为必填项");
				return;
			} else if (isNaN(unit)) {
				alert("单元数必须为数字类型");
				return;
			}

			if (num2 == "" || num2 == null) {
				alert("户数为必填项");
				return;
			} else if (isNaN(num2)) {
				alert("户数必须为数字类型");
				return;
			}

			if (num3 == "" || num3 == null) {
				alert("地上楼层起为必填项");
				return;
			} else if (isNaN(num3)) {
				alert("地上楼层起必须为数字类型");
				return;
			}

			if (num4 == "" || num4 == null) {
				alert("地上总层数为必填项");
				return;
			} else if (isNaN(num4)) {
				alert("地上总层数必须为数字类型");
				return;
			}
			if (num6 !== null && num6 !== "") {
				var reg = /^[0-9,]+$/;
				if (reg.test(num6)) {
					if (num6.indexOf(",") !== -1) {
						var neglectTrArr = num6.split(",");
						for (var negTr = 0; negTr < neglectTrArr.length; negTr++) {
							if ((neglectTrArr[negTr] > parseInt(num7) || neglectTrArr[negTr] < parseInt(num3))
									&& neglectTrArr[negTr] != "") {
								alert("忽略楼层必须在区间内");
								return;
							} else {
								neglectFloorsArr = neglectTrArr;
							}
						}
					} else {
						neglectFloorsArr = num6;
					}
				} else {
					alert("忽略楼层号只能输入数字和英文逗号");
					return;
				}
			}

			//-------------------校验单元区间 获取单元类型--------------------
			var startIndex = 0;
			var endIndex = 0;
			var customInput = $("#custom").val();//自定义输入文本
			if (type == undefined || type == "" || type == null) {
				alert("请选择单元编号类型");
				return;
			}
			if (type == "char") {
				var reg = /^[A-Za-z]+$/;
				//判断是否符合正则表达式
				if (numStart == "" || numStart == null) {
					alert("号段起始为必填项");
					return;
				} else if (numEnd == "" || numEnd == null) {
					alert("号段终止为必填项");
					return;
				} else if (!reg.test(numStart)) {
					alert("号段起始为字母类型");
					return;
				} else if (!reg.test(numEnd)) {
					alert("号段终止为字母类型");
					return;
				}

				for (var d = 0; d < charArr.length; d++) {
					if (charArr[d] == numStart) {
						startIndex = d;
					}
					if (charArr[d] == numEnd) {
						endIndex = d;
					}
				}
				if ((parseInt(endIndex) - parseInt(startIndex) + 1) !== parseInt(unit)) {
					alert("号段差值必须等于单元数");
					return;
				}
				dyArr = charArr.slice(startIndex, endIndex + 1);//返回区间数组

			} else if (type == "number") {
				if (numStart == "" || numStart == null) {
					alert("号段起始为必填项");
					return;
				} else if (numEnd == "" || numEnd == null) {
					alert("号段终止为必填项");
					return;
				} else if (isNaN(numStart)) {
					alert("号段起始为数字类型");
					return;
				} else if (isNaN(numEnd)) {
					alert("号段终止为数字类型");
					return;
				} else if ((parseInt(numEnd) - parseInt(numStart) + 1) !== parseInt(unit)) {
					alert("号段差值必须等于单元数");
					return;
				}

				var dyNumArr = [];//阿拉伯数字类型数组
				for (s = numStart; s <= numEnd; s++) {
					dyNumArr.push([ s ]);
				}
				dyArr = dyNumArr;

			}
			//------------------------------

			//当区间值为空
			var kgReg = /^[ ]+$/;
			if ((start == "" || start == null || kgReg.test(start))
					&& (end == "" || end == null || kgReg.test(end))) {
				start = 1;
				end = num2;
			}

			if (start !== "" || start !== null || !kgReg.test(start)) {
				if (end == "" || end == null || kgReg.test(end)) {
					alert("请填写完整区间");
					return;
				}
			}

			if (end !== "" || end !== null || !kgReg.test(end)) {
				if (start == "" || start == null || kgReg.test(start)) {
					alert("请填写完整区间");
					return;
				}
			}

			if (parseInt(end) - parseInt(start) + 1 !== parseInt(num2)) {
				alert("区间差值必须等于户数");
				return;
			}
			//校验忽略房间
			if (num !== null && num !== "") {
				var reg = /^[0-9,]+$/;
				if (reg.test(num)) {
					if (num.indexOf(",") !== -1) {
						var neglectTrTdArr = num.split(",");
						for (var negTd = 0; negTd < neglectTrTdArr.length; negTd++) {
							if ((neglectTrTdArr[negTd] > end || neglectTrTdArr[negTd] < start)
									&& neglectTrTdArr[negTd] != "") {
								alert("忽略数字必须在区间内");
								return;
							} else {
								neglectRoomsArr = neglectTrTdArr;//忽略数字为多个时
							}
						}
					} else {
						neglectRoomsArr = num;//忽略数字为单个
					}
				} else {
					alert("忽略数字只能输入数字和英文逗号");
					return;
				}
			}

			//--------------------------------校验结束-----------------------------------
			var fjArr = new Array();//房间区间数组
			for (var f = start; f <= end; f++) {
				fjArr.push([ f ])
			}
			if (flag) {
				$("#creatRoom").show();
				str = "[";
				for (var i = 1; i <= unit; i++) {
					str += "{" + "\"" + "unitList" + "\"" + ":[";
					var table = $("<table id=" + "\"" + "table" + i + "\""
							+ " class=" + "\"" + "table table-bordered" + "\""
							+ " style=" + "\""
							+ "float: left; margin-bottom: 0;width:" + 75
							* parseInt(num2) + "px;height:" + 37
							* (parseInt(num4) + 1) + "px;" + "\"" + "onclick="
							+ "\"" + "getTable(this)" + "\"" + "></table>");
					$("#roomsView").append(table);
					for (var j = num7; j >= num3; j--) {
						var trId = i + "" + j;
						var tr = $("<tr " + "onclick=" + "\"" + "getTr(this)"
								+ "\"" + "id=" + "\"" + trId + "\"" +"style="+"\""+"height:37px;"+"\""+"></tr>");
						$("#table" + i).append(tr);
						for (var k = 0; k < num2; k++) {
							var fj = fjArr[k];
							var lc = "";
							var status = 0;//房间状态(1.正常 2.删除)

							if (floorNum == "on") {
								lc = j;
							}

							var con = "";
							if (connect == "on") {
								con = "-";
							}

							if (floor == "on") {
								if (floorNum == "on") {
									lc = cover(lc, i.toString().length);
								} else {
									lc = "";
								}
							}
							if (room = "on") {
								fj = cover(fj, end.toString().length);
							}
							if (num5 == "" || num5 == null) {
								num5 = 0;
							}
							var houseNumber = dyArr[i - 1] + con + prefix + lc
									+ con + fj + suffix;
							var roomId = i + "" + j + "" + k;
							var td = $("<td "
									+ "style="
									+ "\""
									+ "white-space: nowrap;width:75px;text-align: center;"
									+ "\"" + "id=" + "\"" + roomId + "\""
									+ "onclick=" + "\"" + "getTd(this)" + "\""
									+ "><font>" + houseNumber + "</font></td>");
							tr.append(td);
							var status = getRoomStatus(neglectFloorsArr,
									neglectRoomsArr, j, fjArr[k]);
							var buildingId = "";//楼栋id
							var groupId = "";//楼盘分组id
							var premisesId = "";//楼盘id
							var roomsCount = num2 * num4;//单元总房间
							var floorsCount = parseInt(num4) + parseInt(num5);//单元总层数
							var ruleStr = getRuleStr(floor, room, floorNum,
									connect, rule);//房间信息所有规则字符串
							var roomsCount = parseInt(num2) * parseInt(num4);//单元总户数
							roomsList = [ houseNumber, j, status, i,
									buildingId, groupId, premisesId ];
							unitList = [ buildingId, i, prefix, suffix,
									roomsCount, neglectRoomsArr, num1, num2,
									floorsCount, num4, num5, start, end,
									ruleStr ];
							neglectRooms(neglectRoomsArr, fjArr[k], roomId);
							str += "{" + "\"" + "houseName" + "\"" + ":" + "\""
									+ roomsList[0] + "\"" + "," + "\"" + "num"
									+ "\"" + ":" + roomsList[1] + "," + "\""
									+ "status" + "\"" + ":" + roomsList[2]
									+ "," + "\"" + "unitCode" + "\"" + ":"
									+ roomsList[3] + "," + "\"" + "buildingId"
									+ "\"" + ":" + roomsList[4] + "," + "\""
									+ "groupId" + "\"" + ":" + roomsList[5]
									+ "," + "\"" + "premisesId" + "\"" + ":"
									+ roomsList[6] + "}" + ",";
						}

						neglectFloors(neglectFloorsArr, j, trId);
					}
					str = str.substring(0, str.length - 1);
					str += "]," + "\"" + "buildingId" + "\"" + ":"
							+"\""+ unitList[0] +"\""+ "," + "\"" + "code" + "\"" + ":"
							+ unitList[1] + "," + "\"" + "prefix" + "\"" + ":"
							+ unitList[2] + "," + "\"" + "suffix" + "\"" + ":"
							+ unitList[3] + "," + "\"" + "roomTotal" + "\""
							+ ":" + unitList[4] + "," + "\"" + "roomIgnore"
							+ "\"" + ":" + unitList[5] + "," + "\"" + "ladders"
							+ "\"" + ":" + unitList[6] + "," + "\"" + "flats"
							+ "\"" + unitList[7] + "," + "\"" + "floors" + "\""
							+ ":" + unitList[8] + "," + "\"" + "upFloors"
							+ "\"" + ":" + unitList[9] + "," + "\""
							+ "underFloors" + "\"" + ":" + unitList[10] + ","
							+ "\"" + "numStart" + "\"" + ":" + unitList[11]
							+ "," + "\"" + "numEnd" + "\"" + ":" + unitList[12]
							+ "," + "\"" + "generativeRule" + "\"" + ":"
							+ unitList[13] + "},";
					var unitTr = $("<tr "+ "onclick="+ "\""+ "getTr(this)"
								+ "\""+ "id="+ "\""+ "unit"+ i+ "\""+ "><td colspan= "
								+"\""+num2+"\""+"style="+"\""+"text-align: center;background:#66B3FF;"
								+"\""+">"+ i + "单元" + "</td></tr>");
					$("#table" + i).append(unitTr);
					$("#roomsView").attr("style",
							"width:" + 75 * parseInt(num2) * i + "px;");
					var h = $("#hiddenLayer").css("height");
					h = h.substring(0, h.length - 2);
					if (parseInt(h) > (((parseInt(num4) + 1) * 37)+17.5)) {
						$("#hiddenLayer").css("height",(((parseInt(num4) + 1) * 37)+17.5) + "px");
					}
				}
				str = str.substring(0, str.length - 1);
				str += "]";
				flag = false;
			}
		}

		//单元排序
		function showDyRoom() {
			var start = $("#start").val();//区间开始
			var end = $("#end").val();//区间结束
			var num2 = $("#num2").val();//户数
			var unit = $("#unitCount").val();//单元数
			var unitPre = $("#unitPre").val();//单元前缀
			var unitSuf = $("#unitSuf").val();//单元后缀
			var num1 = $("#num1").val();//梯数
			var num = $("#num").val(); //忽略房间号
			var num3 = $("#num3").val();//地上楼层起
			var num4 = $("#num4").val();//地上总层数
			var num5 = $("#num5").val();//地下楼层
			var num6 = $("#num6").val();//忽略楼层数
			var numStart = $("#numStart").val();//号段起始
			var numEnd = $("#numEnd").val();//号段终止
			var prefix = $("#prefix").val();//前缀
			var suffix = $("#suffix").val();//前缀
			var endLen = end.length; //区间结束的长度
			var num7 = parseInt(num4) + parseInt(num3) - 1; //忽略楼层的区间末尾
			var rule = $("input[name='rule']:checked ").val();//生成规则
			var floor = $("input[id='floorFill']:checked ").val();//楼层0补位
			var room = $("input[id='roomFill']:checked ").val();//房间0补位
			var floorNum = $("input[id='floorNum']:checked ").val();//楼层号checkbox
			var connect = $("input[id='connect']:checked ").val(); //连接checkbox
			var type = $("input[name='type']:checked ").val(); //单元编号类型
			var neglectFloorsArr = new Array();//忽略楼层数组
			var neglectRoomsArr = new Array();//忽略房间数组

			//-------------------校验开始-----------------------
			if (unit == "" || unit == null) {
				alert("单元数为必填项");
				return;
			} else if (isNaN(unit)) {
				alert("单元数必须为数字类型");
				return;
			}

			if (num2 == "" || num2 == null) {
				alert("户数为必填项");
				return;
			} else if (isNaN(num2)) {
				alert("户数必须为数字类型");
				return;
			}

			if (num3 == "" || num3 == null) {
				alert("地上楼层起为必填项");
				return;
			} else if (isNaN(num3)) {
				alert("地上楼层起必须为数字类型");
				return;
			}

			if (num4 == "" || num4 == null) {
				alert("地上总层数为必填项");
				return;
			} else if (isNaN(num4)) {
				alert("地上总层数必须为数字类型");
				return;
			}

			if (num6 !== null && num6 !== "") {
				var reg = /^[0-9,]+$/;
				if (reg.test(num6)) {
					if (num6.indexOf(",") !== -1) {
						var neglectTrArr = num6.split(",");
						for (var negTr = 0; negTr < neglectTrArr.length; negTr++) {
							if ((neglectTrArr[negTr] > parseInt(num7) || neglectTrArr[negTr] < parseInt(num3))
									&& neglectTrArr[negTr] != "") {
								alert("忽略楼层必须在区间内");
								return;
							} else {
								neglectFloorsArr = neglectTrArr;
							}
						}
					} else {
						neglectFloorsArr = num6;
					}
				} else {
					alert("忽略楼层号只能输入数字和英文逗号");
					return;
				}
			}

			//-------------------校验单元区间 获取单元类型--------------------
			var startIndex = 0;
			var endIndex = 0;
			var customInput = $("#custom").val();//自定义输入文本
			if (type == undefined || type == "" || type == null) {
				alert("请选择单元编号类型");
				return;
			}
			if (type == "char") {
				var reg = /^[A-Za-z]+$/;
				//判断是否符合正则表达式
				if (numStart == "" || numStart == null) {
					alert("号段起始为必填项");
					return;
				} else if (numEnd == "" || numEnd == null) {
					alert("号段终止为必填项");
					return;
				} else if (!reg.test(numStart)) {
					alert("号段起始为字母类型");
					return;
				} else if (!reg.test(numEnd)) {
					alert("号段终止为字母类型");
					return;
				}

				for (var d = 0; d < charArr.length; d++) {
					if (charArr[d] == numStart) {
						startIndex = d;
					}
					if (charArr[d] == numEnd) {
						endIndex = d;
					}
				}
				if ((parseInt(endIndex) - parseInt(startIndex) + 1) !== parseInt(unit)) {
					alert("号段差值必须等于单元数");
					return;
				}
				dyArr = charArr.slice(startIndex, endIndex + 1);//返回区间数组

			} else if (type == "number") {
				if (numStart == "" || numStart == null) {
					alert("号段起始为必填项");
					return;
				} else if (numEnd == "" || numEnd == null) {
					alert("号段终止为必填项");
					return;
				} else if (isNaN(numStart)) {
					alert("号段起始为数字类型");
					return;
				} else if (isNaN(numEnd)) {
					alert("号段终止为数字类型");
					return;
				} else if ((parseInt(numEnd) - parseInt(numStart) + 1) !== parseInt(unit)) {
					alert("号段差值必须等于单元数");
					return;
				}

				var dyNumArr = [];//阿拉伯数字类型数组
				for (s = numStart; s <= numEnd; s++) {
					dyNumArr.push([ s ]);
				}
				dyArr = dyNumArr;

			}
			//------------------------------

			//当区间值为空
			var kgReg = /^[ ]+$/;
			if ((start == "" || start == null || kgReg.test(start))
					&& (end == "" || end == null || kgReg.test(end))) {
				start = 1;
				end = num2 * num4;
			}
			if (start !== "" || start !== null || !kgReg.test(start)) {
				if (end == "" || end == null || kgReg.test(end)) {
					alert("请填写完整区间");
					return;
				}
			}

			if (end !== "" || end !== null || !kgReg.test(end)) {
				if (start == "" || start == null || kgReg.test(start)) {
					alert("请填写完整区间");
					return;
				}
			}

			if (parseInt(end) - parseInt(start) + 1 !== parseInt(num2)
					* parseInt(num4)) {
				alert("区间差值必须等于户数");
				return;
			}

			//校验忽略房间
			if (num !== null && num !== "") {
				var reg = /^[0-9,]+$/;
				if (reg.test(num)) {
					if (num.indexOf(",") !== -1) {
						var neglectTrTdArr = num.split(",");
						for (var negTd = 0; negTd < neglectTrTdArr.length; negTd++) {
							if ((neglectTrTdArr[negTd] > end || neglectTrTdArr[negTd] < start)
									&& neglectTrTdArr[negTd] != "") {
								alert("忽略数字必须在区间内");
								return;
							} else {
								neglectRoomsArr = neglectTrTdArr;//忽略数字为多个时
							}
						}
					} else {
						neglectRoomsArr = num;//忽略数字为单个
					}
				} else {
					alert("忽略数字只能输入数字和英文逗号");
					return;
				}
			}

			//--------------------------------校验结束-----------------------------------			

			var fjArr = new Array();//房间区间二维数组
			//f:楼层
			for (var f = 0; f < parseInt(num4); f++) {
				fjArr[f] = new Array();
				//l：根据楼层生成的房间号
				for (var l = 0; l < parseInt(num2); l++) {
					//每个单元格对应的房间号
					fjArr[f][l] = f * parseInt(num2) + parseInt(start) + l;
				}

			}
			if (flag) {
				$("#creatRoom").show();
				str = "[";
				for (var i = 1; i <= unit; i++) {
					str += "{" + "\"" + "unitList" + "\"" + ":[";
					var table = $("<table id=" + "\"" + "table" + i + "\""
							+ " class=" + "\"" + "table table-bordered" + "\""
							+ " style=" + "\"" + "width:" + 75 * parseInt(num2)
							+ "px;float:left;margin-bottom: 0;" + "\""
							+ "onclick=" + "\"" + "getTable(this)" + "\""
							+ "></table>");
					$("#roomsView").append(table);
					for (var j = num7; j >= num3; j--) {
						var trId = i + "" + j;
						var tr = $("<tr " + "onclick=" + "\"" + "getTr(this)"
								+ "\"" + "id=" + "\"" + trId + "\"" + "></tr>");
						$("#table" + i).append(tr);
						for (var k = 0; k < num2; k++) {
							var fj = fjArr[(j - num3)][k];
							var lc = "";
							if (floorNum == "on") {
								lc = j;
							}

							var con = "";
							if (connect == "on") {
								con = "-";
							}

							if (floor == "on") {
								if (floorNum == "on") {
									lc = cover(lc, i.toString().length);
								} else {
									lc = "";
								}
							}
							if (room = "on") {
								fj = cover(fj, end.toString().length);
							}
							var houseNumber = dyArr[i - 1] + con + prefix + lc
									+ con + fj + suffix;
							var roomId = i + "" + "" + j + "" + k;
							var td = $("<td "
									+ "style="
									+ "\""
									+ "white-space: nowrap;width:75px;text-align: center;"
									+ "\"" + "id=" + "\"" + roomId + "\""
									+ "onclick=" + "\"" + "getTd(this)" + "\""
									+ "><font>" + houseNumber + "</font></td>");
							tr.append(td);
							var status = getRoomStatus(neglectFloorsArr,
									neglectRoomsArr, j, fjArr[(j - num3)][k]);
							var buildingId = "";//楼栋id
							var groupId = "";//楼盘分组id
							var premisesId = "";//楼盘id
							var roomsCount = num2 * num4;//单元总房间
							var floorsCount = parseInt(num4) + parseInt(num5);//单元总层数
							var ruleStr = getRuleStr(floor, room, floorNum,
									connect, rule);//房间信息所有规则字符串
							var roomsCount = parseInt(num2) * parseInt(num4);//单元总户数
							roomsList = [ houseNumber, j, status, i,
									buildingId, groupId, premisesId ];
							unitList = [ buildingId, i, prefix, suffix,
									roomsCount, neglectRoomsArr, num1, num2,
									floorsCount, num4, num5, start, end,
									ruleStr ];
							neglectRooms(neglectRoomsArr, fjArr[(j - num3)][k],
									roomId);
							str += "{" + "\"" + "houseName" + "\"" + ":"
									+ roomsList[0] + "," + "\"" + "num" + "\""
									+ ":" + roomsList[1] + "," + "\""
									+ "status" + "\"" + ":" + roomsList[2]
									+ "," + "\"" + "unitCode" + "\"" + ":"
									+ roomsList[3] + "," + "\"" + "buildingId"
									+ "\"" + ":" + roomsList[4] + "," + "\""
									+ "groupId" + "\"" + ":" + roomsList[5]
									+ "," + "\"" + "premisesId" + "\"" + ":"
									+ roomsList[6] + "}" + ",";
						}
						neglectFloors(neglectFloorsArr, j, trId);
					}
					str = str.substring(0, str.length - 1);
					str += "]," + "\"" + "buildingId" + "\"" + ":"
							+"\""+ unitList[0] + "\"" + "," + "\"" + "code" + "\"" + ":"
							+ unitList[1] + "," + "\"" + "prefix" + "\"" + ":"
							+ unitList[2] + "," + "\"" + "suffix" + "\"" + ":"
							+ unitList[3] + "," + "\"" + "roomTotal" + "\""
							+ ":" + unitList[4] + "," + "\"" + "roomIgnore"
							+ "\"" + ":" + unitList[5] + "," + "\"" + "ladders"
							+ "\"" + ":" + unitList[6] + "," + "\"" + "flats"
							+ "\"" + unitList[7] + "," + "\"" + "floors" + "\""
							+ ":" + unitList[8] + "," + "\"" + "upFloors"
							+ "\"" + ":" + unitList[9] + "," + "\""
							+ "underFloors" + "\"" + ":" + unitList[10] + ","
							+ "\"" + "numStart" + "\"" + ":" + unitList[11]
							+ "," + "\"" + "numEnd" + "\"" + ":" + unitList[12]
							+ "," + "\"" + "generativeRule" + "\"" + ":"
							+ unitList[13] + "},";

					var unitTr = $("<tr "
							+ "onclick="
							+ "\""
							+ "getTr(this)"
							+ "\""
							+ "id="
							+ "\""
							+ "unit"
							+ i
							+ "\""
							+ "><td colspan= "+"\""+num2+"\""+"style="+"\""+"text-align: center;background:#66B3FF"+"\""+">"
							+ i + "单元" + "</td></tr>");
					$("#table" + i).append(unitTr);
					$("#roomsView").attr("style",
							"width:" + 75 * parseInt(num2) * i + "px;");
				}
				str = str.substring(0, str.length - 1);
				str += "]";
				flag = false;
			}
		}

		//楼层 房间 "0"补位
		function cover(str, len) {
			var strArr = str.toString().split("");
			while (strArr.length < len) {
				strArr.unshift("0");
			}
			return strArr.join("");
		}

		//获取table的id
		function getTable(table) {
			$("#getTbId").append($(table).attr("id") + ",");
		}

		//获取tr的id
		function getTr(tr) {
			$("#getTrId").append($(tr).attr("id") + ",");
		}

		//获取td的id
		function getTd(td) {
			$("#getTdId").append($(td).attr("id") + ",");
		}

		//忽略楼层
		function neglectFloors(neglectFloorsArr, floor, trId) {
			for (var i = 0; i < neglectFloorsArr.length; i++) {
				if (neglectFloorsArr[i] == floor) {
					$("tr[id$=" + trId + "]").find("td").find("font").attr(
							"style", "visibility:hidden;");
					$("tr[id$=" + trId + "]").attr("style",
							"background-color:grey;");

				}

			}

		}

		//单层排序忽略房间
		function neglectRooms(neglectRoomsArr, fj, tdId) {
			for (var i = 0; i < neglectRoomsArr.length; i++) {
				if (neglectRoomsArr[i] == fj) {
					$("td[id$=" + tdId + "]").find("font").attr("style",
							"visibility:hidden;");
					$("td[id$=" + tdId + "]").attr("style",
							"background-color:grey;");

				}

			}

		}
		//删除房间
		function deleteRoom() {
			var trTdId = $("#getTdId").text();
			var delTrTdIdArr = new Array();
			delTrTdIdArr = trTdId.substring(0, trTdId.length - 1).split(",");
			for (i = 0; i < delTrTdIdArr.length; i++) {
				$("#" + delTrTdIdArr[i]).find("font").attr("style",
						"visibility: hidden");
				$("#" + delTrTdIdArr[i])
						.attr("style", "background-color: grey");
			}

			$("#getTdId").text("");
		}
		//增加房间
		function restoreRoom() {
			var trTdId = $("#getTdId").text();
			var delTrTdIdArr = new Array();
			delTrTdIdArr = trTdId.substring(0, trTdId.length - 1).split(",");
			for (i = 0; i < delTrTdIdArr.length; i++) {
				$("#" + delTrTdIdArr[i]).find("font").attr("style",
						"visibility:visible;");
				$("#" + delTrTdIdArr[i]).attr("style", "background-color: ");
			}
			$("#getTdId").text("");
		}

		//获取房间状态(1.正常 ,2.删除)
		function getRoomStatus(neglectFloorsArr, neglectRoomsArr, floorNum,
				roomNum) {
			var status = 0;
			if (neglectFloorsArr.indexOf(floorNum.toString()) !== -1
					|| neglectRoomsArr.indexOf(roomNum.toString()) !== -1) {
				status = 2;
				return status;
			} else {
				status = 1;
				return status;
			}
		}

		//获取生成规则字符串
		function getRuleStr(floor, room, floorNum, connect, rule) {
			var ruleStr = "";//规则字符串
			if (rule == "floor") {
				ruleStr = 1 + "";
			} else if (rule == "unit") {
				ruleStr = 2 + "";
			}
			if (floor == "on") {
				ruleStr += 3 + "";
			}
			if (room == "on") {
				ruleStr += 4 + "";
			}
			if (floorNum == "on") {
				ruleStr += 5 + "";
			}
			if (connect == "on") {
				ruleStr += 6 + "";
			}

			return ruleStr;
		}

		//保存
		function saveRooms() {
			var premisesId = "";
			var buildingGroupId = "";
			var buildingName = "";
			var buildingCode = "";
			var unitNum = $("#unitCount").val();//单元数
			var unitPre = $("#unitPre").val();//单元前缀
			var unitSuf = $("#unitSuf").val();//单元后缀
			var unitType = $("input[name='type']:checked ").val();//类型
			var upFloorStart = $("#num3").val();//地上楼层起
			var upFloorTotal = $("#num4").val();//地上总层数
			var underFloors = $("#num5").val();//地下楼层
			var ignoreStairNum = $("#num6").val();//忽略楼层
			var numStart = $("#numStart").val();//号段起始
			var numEnd = $("#numEnd").val();//号段终止
			$.ajax({
				type : "POST",
				url : '${CTX}/buildingUnit/addRoom.do',
				dataType : "json",
				data : {
					"list" : str,
					"premisesId" : premisesId,
					"buildingGroupId" : buildingGroupId,
					"buildingName" : buildingName,
					"buildingCode" : buildingCode,
					"unitNum" : unitNum,
					"unitPre" : unitPre,
					"unitSuf" : unitSuf,
					"unitType" : unitType,
					"upFloorStart" : upFloorStart,
					"upFloorTotal" : upFloorTotal,
					"underFloors" : underFloors,
					"ignoreStairNum" : ignoreStairNum,
					"numStart" : numStart,
					"numEnd" : numEnd
				},
				success : function(data) {

				}
			});

		}
	</script>