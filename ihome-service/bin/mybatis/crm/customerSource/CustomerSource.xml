<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="customerSource">

	<!-- 分页查询客源信息 -->
	<select id="getCustomerSourcePage" parameterType="map"
		resultType="CustomerSourceModel">
		SELECT
			a.ID as id,
			a.CUSTOMER_ID as customerId,
			DEMAND_CODE as demandCode,
			a.DEMAND_STATUS as demandStatus ,
			a.DEMAND_TYPE as demandType,
			a.PROPERTY_TYPE as propertyType ,
			a.ISPROTECTED  as  isProtected,
			a.ORG_NAME  as orgName,
			a.CD_TYPE  as cdType,
			DEMAND_URGENT as demandUrgent ,
			AFFORD_PRICE as affordPrice ,
			BUILD_AREA as buildArea,
			a.ROOMS as rooms ,
			OFFICE as office ,
			WC as wc ,
			BALCONY as balcony ,
			DEMAND_REGION_IDS as demandRegionIds ,
			DEMAND_REGION as demandRegion ,
			DEMAND_PREMISES_IDS as demandPremisesIds ,
			DEMAND_PREMISES as demandPremises ,
			CHECK_IN_TIME as checkInTime ,
			RENT_TIME as rentTime,
			JOIN_RENT as joinRent ,
			RENT_WAY as rentWay ,
			DEPOSIT as deposit,
			SERVICE_CHARGE as serviceCharge,
			BUILD_TYPE as buildType,
			HOUSEHOLD as houseHold,
			FURNITURE as furniture,
			OTHER_DEMAND as otherDemand,
			TAKE_LOOK_TIME as takeLookTime,
			INVOICE_HEADER as invoiceHeader,
			CUSFROM as parentSource,
			CUSFROM_2 as childSource,
			a.CREATE_TIME as createTime,
			a.OPERATE_TIME as operateTime,
			a.OPERATE_USER as operateUser,
			a.CUS_JUDGE as custJudge,
			a.NEED_FLOOR_START as needFloorStart,
			a.NEED_FLOOR_END as needFloorEnd,
			a.BUY_MOTIVATION as buyMotivation,
			a.FIRSTPAY as firstPay,
			ORIENTATION as orientation,
			DECORATION as decoration,
			a.REMARK as remark,
			b.USER_NAME as userName,
			b.TELL as tell,
			c.promiseTakeDate as takeDate,
			e.ENTRUST_CODE as entrustCode,
			e.IS_SIGN as isSign,
			e.SIGN_STATUS as signStatus,
			a.org_code as operateOrg,
			(select count(d.customer_source_id) from CUSTOMER_SOURCE_FOLLOW d where
			customer_source_id=a.id
			GROUP BY customer_source_id)
			as isFollowed,
			(select count(c.demand_id) from CUSTOMER_PROMISE c where c.demand_id=a.id
			GROUP BY demand_id)
			as isPromised
		FROM CUSTOMER_DEMAND a
			left join CUSTOMERS b on a.CUSTOMER_ID = b.ID
			left join
			(select demand_id, count(demand_id) as isPromise, max(take_date) as promiseTakeDate
			from CUSTOMER_PROMISE where 
			promise_status != 3  GROUP BY demand_id) c on c.demand_id=a.id
			left join
			(select customer_source_id,count(customer_source_id) as isFollowed from
			CUSTOMER_SOURCE_FOLLOW GROUP BY customer_source_id) d on
			d.customer_source_id=a.id
			left join CUSTOMER_SOURCE_ENTRUST e on a.ID=e.CUSTOMER_SOURCE_ID
			left join customer_referral cr on cr.demand_id = a.id
			where a.cd_type = 1
			<if test="createTimeStart != null and createTimeStart != ''">
				AND a.CREATE_TIME &gt;= to_date(#{createTimeStart},'yyyy-mm-dd ')
			</if>
			<if test="createTimeEnd != null and createTimeEnd != ''">
				AND a.CREATE_TIME &lt;= to_date(#{createTimeEnd},'yyyy-mm-dd ')
			</if>
			<if test="lookHouseStart != null and lookHouseStart != ''">
				AND c.promiseTakeDate &gt;= to_date(#{lookHouseStart},'yyyy-mm-dd ')
			</if>
			<if test="lookHouseEnd != null and lookHouseEnd != ''">
				AND c.promiseTakeDate &lt;= to_date(#{lookHouseEnd},'yyyy-mm-dd ')
			</if>
			<if test="demandCode != null and demandCode != ''">
				AND DEMAND_CODE= #{demandCode}
			</if>
			<if test="cdType != null and cdType != ''">
				AND CD_TYPE= #{cdType}
			</if>
			<if test="priceStart != null and priceStart != ''">
				AND AFFORD_PRICE &gt;= #{priceStart}
			</if>
			<if test="priceEnd != null and priceEnd != ''">
				AND AFFORD_PRICE &lt;= #{priceEnd}
			</if>
			<if test="areaStart != null and areaStart != ''">
				AND BUILD_AREA &gt;= #{areaStart}
			</if>
			<if test="areaEnd != null and areaEnd != ''">
				AND BUILD_AREA &lt;= #{areaEnd}
			</if>
			<if test="userName != null and userName != ''">
				AND INSTR(b.USER_NAME, #{userName}) > 0
			</if>
			<if test="tell != null and tell != ''">
				AND b.TELL= #{tell}
			</if>
			<if
				test="isPromise != null and isPromise != '' and isPromise == 1">
				AND isPromise is not null
			</if>
			<if
				test="isPromise != null and isPromise != '' and isPromise == 0">
				AND isPromise is null
			</if>
			<if
				test="isFollowed != null and isFollowed != '' and isFollowed == 1">
				AND d.isFollowed is not null
			</if>
			<if
				test="isFollowed != null and isFollowed != '' and isFollowed == 0">
				AND d.isFollowed is null
			</if>
			<if test="entrustCode != null and entrustCode != ''">
				AND e.ENTRUST_CODE = #{entrustCode}
			</if>
			<if test="isSign != null and isSign != ''">
				AND e.IS_SIGN = #{isSign}
			</if>
			<if test="signStatus != null and signStatus != ''">
				AND e.SIGN_STATUS = #{signStatus}
			</if>
			<if test="rooms != null and rooms != ''">
				AND a.ROOMS = #{rooms}
			</if>
			<if test="operateUser != null and operateUser != ''">
				AND a.OPERATE_USER = #{operateUser}
			</if>
			<if test="demandPremises != null and demandPremises != ''">
				AND INSTR(a.DEMAND_PREMISES, #{demandPremises}) > 0
			</if>
			<if test="demandRegion != null and demandRegion != ''">
				AND INSTR(a.DEMAND_REGION, #{demandRegion}) > 0
			</if>
			<if test="demandType != null and demandType != ''">
				AND a.DEMAND_TYPE = #{demandType}
			</if>
			<if test="propertyType != null and propertyType != ''">
				AND a.PROPERTY_TYPE = #{propertyType}
			</if>
			<if test="operateOrg != null and operateOrg != ''">
				AND INSTR(f.OPERATE_ORG, #{operateOrg}) > 0
			</if>
			<if test="isPromised != null and isPromised != ''">
				AND isPromise = #{isPromised}
			</if>
			<if test="parentSource != null and parentSource != ''">
				AND CUSFROM = #{parentSource}
			</if>
			<if test="childSource != null and childSource != ''">
				AND CUSFROM_2 = #{childSource}
			</if>
			<if test="buildType != null and buildType != ''">
				AND BUILD_TYPE = #{buildType}
			</if>
			<if test="custJudge != null and custJudge != '' and custJudge==5">
				AND CUS_JUDGE ！= 4
			</if>
			<if test="custJudge != null and custJudge != '' and custJudge!=5 ">
				AND CUS_JUDGE = #{custJudge}
			</if>
			<if test="demandStatus != null and demandStatus != '' and demandStatus==8">
				AND a.DEMAND_STATUS ！= 4 and a.DEMAND_STATUS ！= 7
			</if>
			<if test="demandStatus != null and demandStatus != '' and demandStatus!=8 ">
				AND a.DEMAND_STATUS = #{demandStatus}
			</if>
			<if test="isCustProtected == 'true' ">
				AND a.ISPROTECTED	= 1
			</if>
			<if test="isCustProtected == 'false' ">
				AND a.ISPROTECTED	= 2
			</if>
			<if test="haveTransfered == 'true' ">
				AND cr.status = 2
			</if>
			<if test="needCallBack == 'true' ">
				AND  a.id in(           
							SELECT 
								 cd.id
							FROM CUSTOMER_DEMAND cd
							where 
								cd.demand_status = 1
								and  cd.is_call_back != 1
							    and trunc(cd.create_time, 'dd') = trunc(sysdate-1, 'dd')
							group by cd.id
							union all
							SELECT 
								cp.demand_id
							FROM CUSTOMER_PROMISE cp, CUSTOMER_DEMAND cd
							where trunc(sysdate, 'dd') > cp.take_date
							    and cp.promise_status != 3
							    and cp.is_call_back != 1
							    and  trunc(cp.take_date, 'dd') = trunc(sysdate - 1, 'dd')
							    and cp.demand_id = cd.id
							group by cp.demand_id
      						)
			</if>
			<if test="notTimeCallBack == 'true' ">
				AND  a.id in(           
							SELECT 
								 cd.id
							FROM CUSTOMER_DEMAND cd
							where 
								cd.demand_status = 1
							    and trunc(cd.create_time, 'dd') &lt; trunc(sysdate-1, 'dd')
							group by cd.id
							union all
							SELECT 
								cp.demand_id
							FROM CUSTOMER_PROMISE cp, CUSTOMER_DEMAND cd
							where trunc(sysdate, 'dd') > cp.take_date
							    and cp.promise_status != 3
							    and trunc(cp.take_date, 'dd') &lt; trunc(sysdate - 1, 'dd')
							    and cp.demand_id = cd.id
							group by cp.demand_id
      						)
			</if>
			ORDER BY id desc
	</select>

	<!-- 新增客源 -->
	<insert id="addCustomerSource" parameterType="map">
		INSERT INTO CUSTOMER_DEMAND (
			ID,
			<if test="customerId != null" > 
			CUSTOMER_ID, 
      		</if>
			<if test="demandCode != null" > 
			DEMAND_CODE,
      		</if>
			<if test="demandStatus != null" > 
			DEMAND_STATUS,
      		</if>
			<if test="demandType != null" > 
			DEMAND_TYPE,
      		</if>
			<if test="propertyType != null" > 
			PROPERTY_TYPE, 
      		</if>
			<if test="demandUrgent != null" > 
			DEMAND_URGENT, 
      		</if>
			<if test="viewHome != null" > 
			VIEWHOME, 
      		</if>
			<if test="affordPrice != null" > 
			AFFORD_PRICE, 
      		</if>
			<if test="buildArea != null" > 
			BUILD_AREA, 
      		</if>
			<if test="rooms != null" > 
			ROOMS, 
      		</if>
			<if test="office != null" > 
			OFFICE, 
      		</if>
			<if test="wc != null" > 
			WC, 
      		</if>
			<if test="balcony != null" > 
			BALCONY, 
      		</if>
			<if test="demandRegionIds != null" > 
			DEMAND_REGION_IDS, 
      		</if>
			<if test="demandRegion != null" > 
			DEMAND_REGION, 
      		</if>
			<if test="demandPremisesIds != null" > 
			DEMAND_PREMISES_IDS, 
      		</if>
			<if test="demandPremises != null" > 
			DEMAND_PREMISES, 
      		</if>
			<if test="checkInTime != null" > 
			CHECK_IN_TIME, 
      		</if>
			<if test="rentTime != null" > 
			RENT_TIME, 
      		</if>
			<if test="joinRent != null" > 
			JOIN_RENT, 
      		</if>
			<if test="rentWay != null" > 
			RENT_WAY, 
      		</if>
			<if test="deposit != null" > 
			DEPOSIT, 
      		</if>
			<if test="serviceCharge != null" > 
			SERVICE_CHARGE, 
      		</if>
			<if test="buildType != null" > 
			BUILD_TYPE, 
      		</if>
			<if test="houseHold != null" > 
			HOUSEHOLD,
      		</if>
			<if test="furniture != null" >  
			FURNITURE, 
      		</if>
			<if test="otherDemand != null" > 
			OTHER_DEMAND, 
      		</if>
			<if test="invoiceType1 != null" > 
			INVOICE_TYPE1, 
      		</if>
			<if test="invoiceType2 != null" > 
			INVOICE_TYPE2, 
      		</if>
			<if test="takeLookTime != null" > 
			TAKE_LOOK_TIME, 
      		</if>
			<if test="invoiceHeader != null" > 
			INVOICE_HEADER, 
      		</if>
			<if test="remark != null" > 
			REMARK, 
      		</if>
			<if test="operateUser != null" > 
			OPERATE_USER, 
      		</if>
			<if test="protect != null" > 
			PROTECT, 
      		</if>
			<if test="visitStatus != null" > 
			VISIT_STATUS, 
      		</if>
			<if test="visitTime != null" > 
			VISIT_TIME, 
      		</if>
			<if test="visitUser != null" > 
			VISIT_USER, 
      		</if>
			<if test="messOwner != null" > 
			MESS_OWNER, 
      		</if>
			<if test="orientation != null" > 
			ORIENTATION, 
      		</if>
			<if test="decoration != null" > 
			DECORATION, 
      		</if>
			<if test="operateUserId != null" >
			OPERATE_USER_ID,
      		</if>
			<if test="roomAmountStart != null" > 
			ROOM_AMOUNT_START, 
      		</if>
			<if test="roomAmountEnd != null" > 
			ROOM_AMOUNT_END, 
      		</if>
			<if test="needFloorStart != null" > 
			NEED_FLOOR_START, 
      		</if>
			<if test="needFloorEnd != null" > 
			NEED_FLOOR_END, 
      		</if>			
      		<if test="needFloor != null" > 
			NEED_FLOOR, 
      		</if>
			<if test="houseProperty != null" > 
			HOUSE_PROPERTY, 
      		</if>
			<if test="buyQualification != null" > 
			BUY_QUALIFICATION, 
      		</if>
			<if test="buyMotivation != null" > 
			BUY_MOTIVATION, 
      		</if>
			<if test="needBuildingType != null" > 
			NEED_BUILDING_TYPE, 
      		</if>
			<if test="payment != null" > 
			PAYMENT, 
      		</if>
			<if test="firstPay != null" > 
			FIRSTPAY, 
      		</if>
			<if test="cusFrom != null" > 
			CUSFROM, 
      		</if>
			<if test="cusFrom2 != null" > 
			CUSFROM_2, 
      		</if>
			<if test="cusJudge != null" > 
			CUS_JUDGE, 
      		</if>
			<if test="sellOldBuyNew != null" > 
			SELLOLD_BUYNEW, 
      		</if>
			<if test="doorWidthStart != null" > 
			DOOR_WIDTH_START, 
      		</if>
			<if test="doorWidthEnd != null" > 
			DOOR_WIDTH_END, 
      		</if>
			<if test="houseHeightStart != null" > 
			HOUSE_HEIGHT_START, 
      		</if>
			<if test="houseHeightEnd != null" > 
			HOUSE_HEIGHT_END, 
      		</if>
			<if test="propertyFeeStart != null" > 
			PROPERTY_FEE_START, 
      		</if>
			<if test="locationType != null" > 
			LOCATION_TYPE, 
      		</if>
			<if test="propertyFeeEnd != null" > 
			PROPERTY_FEE_END, 
      		</if>
			<if test="affordPriceUnit != null" > 
			AFFORD_PRICE_UNIT, 
      		</if>
			<if test="buyQualification2 != null" > 
			BUY_QUALIFICATION_2,
      		</if>
			<if test="orgCode != null" > 
			ORG_CODE,
      		</if>
			<if test="orgName != null" > 
			ORG_NAME,
      		</if>
			CREATE_TIME, 
			OPERATE_TIME
			) VALUES (
			CUSTOMER_DEMAND_SEQ.NEXTVAL, 
			<if test="customerId != null" > 
			#{customerId}, 
     		</if>
			<if test="demandCode != null" > 
			#{demandCode}, 
      		</if>
			<if test="demandStatus != null" > 
			#{demandStatus}, 
      		</if>
			<if test="demandType != null" > 
			#{demandType}, 
      		</if>
			<if test="propertyType != null" > 
			#{propertyType}, 
      		</if>
			<if test="demandUrgent != null" > 
			#{demandUrgent}, 
      		</if>			
      		<if test="viewHome != null" > 
			#{viewHome}, 
      		</if>
			<if test="affordPrice != null" > 
			#{affordPrice}, 
      		</if>
			<if test="buildArea != null" > 
			#{buildArea}, 
      		</if>
			<if test="rooms != null" > 
			#{rooms}, 
      		</if>
			<if test="office != null" > 
			#{office}, 
      		</if>
			<if test="wc != null" > 
			#{wc}, 
      		</if>
			<if test="balcony != null" > 
			#{balcony}, 
      		</if>
			<if test="demandRegionIds != null" > 
			#{demandRegionIds}, 
      		</if>
			<if test="demandRegion != null" > 
			#{demandRegion}, 
      		</if>
			<if test="demandPremisesIds != null" > 
			#{demandPremisesIds}, 
      		</if>
			<if test="demandPremises != null" > 
			#{demandPremises}, 
      		</if>
			<if test="checkInTime != null" > 
	    	to_date(#{checkInTime,jdbcType=DATE},'yyyy-mm-dd'),
      		</if>
			<if test="rentTime != null" > 
			#{rentTime}, 
      		</if>
			<if test="joinRent != null" > 
			#{joinRent}, 
      		</if>
			<if test="rentWay != null" > 
			#{rentWay}, 
      		</if>
			<if test="deposit != null" > 
			#{deposit}, 
      		</if>
			<if test="serviceCharge != null" > 
			#{serviceCharge}, 
      		</if>
			<if test="buildType != null" > 
			#{buildType}, 
      		</if>
			<if test="houseHold != null" > 
			#{houseHold}, 
      		</if>
			<if test="furniture != null" > 
			#{furniture}, 
      		</if>
			<if test="otherDemand != null" > 
			#{otherDemand},
      		</if> 
			<if test="invoiceType1 != null" > 
			#{invoiceType1}, 
      		</if>
			<if test="invoiceType2 != null" >  
			#{invoiceType2},  
      		</if>
			<if test="takeLookTime != null" > 
			#{takeLookTime}, 
      		</if>
			<if test="invoiceHeader != null" > 
			#{invoiceHeader}, 
      		</if>
			<if test="remark != null" > 
			#{remark}, 
      		</if>
			<if test="operateUser != null" > 
			#{operateUser}, 
      		</if>
			<if test="protect != null" > 
			#{protect}, 
      		</if>
			<if test="visitStatus != null" > 
			#{visitStatus}, 
      		</if>
			<if test="visitTime != null" > 
			#{visitTime}, 
      		</if>
			<if test="visitUser != null" > 
			#{visitUser},
      		</if>
			<if test="messOwner != null" >  
			#{messOwner}, 
      		</if>
			<if test="orientation != null" > 
			#{orientation}, 
      		</if>
			<if test="decoration != null" > 
			#{decoration}, 
      		</if>
			<if test="operateUserId != null" > 
			#{operateUserId}, 
      		</if>
			<if test="roomAmountStart != null" > 
			#{roomAmountStart}, 
      		</if>
			<if test="roomAmountEnd != null" > 
			#{roomAmountEnd}, 
      		</if>
			<if test="needFloorStart != null" > 
			#{needFloorStart}, 
      		</if>
			<if test="needFloorEnd != null" > 
			#{needFloorEnd}, 
      		</if>
      		<if test="needFloor != null" > 
			#{needFloor}, 
      		</if>
			<if test="houseProperty != null" > 
			#{houseProperty}, 
      		</if>
			<if test="buyQualification != null" > 
			#{buyQualification},
      		</if> 
			<if test="buyMotivation != null" > 
			#{buyMotivation}, 
      		</if>
			<if test="needBuildingType != null" > 
			#{needBuildingType}, 
      		</if>
			<if test="payment != null" > 
			#{payment}, 
      		</if>
			<if test="firstPay != null" > 
			#{firstPay}, 
      		</if>
			<if test="cusFrom != null" > 
			#{cusFrom}, 
      		</if>
			<if test="cusFrom2 != null" > 
			#{cusFrom2}, 
      		</if>
			<if test="cusJudge != null" > 
			#{cusJudge}, 
      		</if>
			<if test="sellOldBuyNew != null" > 
			#{sellOldBuyNew}, 
      		</if>
			<if test="doorWidthStart != null" > 
			#{doorWidthStart}, 
      		</if>
			<if test="doorWidthEnd != null" > 
			#{doorWidthEnd}, 
      		</if>
			<if test="houseHeightStart != null" > 
			#{houseHeightStart},
      		</if>
			<if test="houseHeightEnd != null" > 
			#{houseHeightEnd},
      		</if>
			<if test="propertyFeeStart != null" >  
			#{propertyFeeStart},
      		</if>
			<if test="locationType != null" >  
			#{locationType}, 
      		</if>
			<if test="propertyFeeEnd != null" > 
			#{propertyFeeEnd}, 
      		</if>
			<if test="affordPriceUnit != null" > 
			#{affordPriceUnit}, 
      		</if>
			<if test="buyQualification2 != null" > 
			#{buyQualification2},
      		</if>
			<if test="orgCode != null" > 
			#{orgCode},
      		</if>
			<if test="orgName != null" > 
			#{orgName},
      		</if>
			sysdate, 
			sysdate
			)
	</insert>		
	
	<!-- 分页查询跟进信息 -->
	<select id="getFollowRecordsPage" parameterType="map"
		resultType="houseFollowModel">
		SELECT
			OPERATE_USER as operateUser,
			FOLLOW_TIME as followTime,
			FOLLOW_WAY as followWay,
			FOLLOW_TYPE as followType,
			FOLLOW_CONTENT as followContent
		FROM
			HOUSE_FOLLOW
		WHERE
			HOUSE_INFO_ID = #{HouseInfoId}		
			<if test="followData == 1">
				AND FOLLOW_TYPE = 1
			</if>
			<if test="followData == 2">
				AND FOLLOW_TYPE = 2
			</if>
	</select>	
	<!-- 查询客源信息ById -->
	<select id="getCustomerSourceById" parameterType="map" resultType="CustomerSourceModel">
		SELECT
			D.ID AS id,
			D.CUSTOMER_ID AS customerId,
			D.DEMAND_CODE AS demandCode,
			D.DEMAND_STATUS AS demandStatus,
			D.DEMAND_TYPE AS demandType,
			D.PROPERTY_TYPE AS propertyType,
			D.DEMAND_URGENT AS demandUrgent,
			D.AFFORD_PRICE AS affordPrice,
			D.BUILD_AREA AS buildArea,
			D.ROOMS AS rooms,
			
			D.OFFICE AS office,
			D.WC AS wc,
			D.BALCONY AS balcony,
			D.DEMAND_REGION_IDS AS demandRegionIds,
			D.DEMAND_REGION AS demandRegion,
			D.DEMAND_PREMISES_IDS AS demandPremisesIds,
			D.DEMAND_PREMISES AS demandPremises,
			D.CHECK_IN_TIME AS checkInTime,
			D.RENT_TIME AS rentTime,
			D.JOIN_RENT AS joinRent,
			
			D.RENT_WAY AS rentWay,
			D.DEPOSIT AS deposit,
			D.SERVICE_CHARGE AS serviceCharge,
			D.BUILD_TYPE AS buildType,
			D.HOUSEHOLD AS houseHold,
			D.FURNITURE AS furniture,
			D.OTHER_DEMAND AS otherDemand,
			D.TAKE_LOOK_TIME AS takeLookTime,
			D.INVOICE_HEADER AS invoiceHeader,
			D.REMARK AS remark,
			
			D.CREATE_TIME AS createTime,
			D.OPERATE_TIME AS operateTime,
			D.OPERATE_USER AS operateUser,
			D.PROTECT AS protect,
			D.VISIT_STATUS AS visitStatus,
			D.VISIT_TIME AS visitTime,
			D.VISIT_USER AS visitUser,
			D.MESS_OWNER AS messOwner,
			D.ORIENTATION AS orientation,
			D.DECORATION AS decoration,

			D.OPERATE_USER_ID AS operateUserId,
			D.ROOM_AMOUNT_START AS roomAmountStart,
			D.ROOM_AMOUNT_END AS roomAmountEnd,
			D.NEED_FLOOR_START AS needFloorStart,
			D.NEED_FLOOR_END AS needFloorEnd,
			D.HOUSE_PROPERTY AS houseProperty,
			D.BUY_QUALIFICATION AS buyQualification,
			D.BUY_MOTIVATION AS buyMotivation,
			D.PAYMENT AS payment,

			D.FIRSTPAY AS firstPay,
			D.SELLOLD_BUYNEW AS selloldBuynew,
			D.PROPERTY_FEE_START AS propertyFeeStart,
			D.PROPERTY_FEE_END AS propertyFeeEnd,
			D.AFFORD_PRICE_UNIT AS affordPriceUnit,
			D.BUY_QUALIFICATION_2 AS buyQualification2,
			D.CUSFROM AS parentSource, 
			D.CUSFROM_2 AS childSource,
			D.CUS_JUDGE AS custJudge,
			D.DOOR_WIDTH_START AS doorWidthStart,

			D.DOOR_WIDTH_END AS doorWidthEnd,
			D.HOUSE_HEIGHT_START AS houseHeightStart,
			D.HOUSE_HEIGHT_END AS houseHeightEnd,
			D.LOCATION_TYPE AS locationType,
			D.NEED_FLOOR AS needFloor,
			D.INVOICE_TYPE1 AS invoiceType1,
			D.INVOICE_TYPE2 AS invoiceType2,
			D.LOAN_MONEY AS loanMoney,
			D.LOAN_TERM AS loanTerm,
			D.FINANCE_TYPE AS financeType,

			D.REPAYMENT AS repayment,
			D.VIEWHOME AS viewHome,
			C.USER_NAME AS userName,
			C.TELL AS tell,
			C.SEX AS sex
		FROM 
			CUSTOMER_DEMAND D,
			CUSTOMERS C
		WHERE 
			D.ID = #{id}
		AND
			D.CUSTOMER_ID = C.ID
		</select>
		   	  
	<!-- 分页查询租赁房源 -->
   <select id="getHouseLeasePage" parameterType="map" resultType="houseLeaseModel">
   		SELECT
   			lease.HOUSE_INFO_ID as houseInfoId,
   			info.CODE as code,
   			LEASE_PRICE as leasePrice,
   			lease.COVERED_AREA as coveredArea,
   			ROOMS as rooms,
   			OFFICE as office,
   			WC as wc,
   			CHAO_XIANG as chaoXiang,
   			DECORADION as decoradion, 
   			bh.num as floor,
         	mv.bp_name as premisesName,
         	mv.detail as addressDetail,
         	mv.AC_NAME as communityName,
         	lease.OWNER_NAME as ownerName,
         	lease.use_type as useType
         FROM house_lease lease
         	left join house_info info  on lease.house_info_id = info.id
			left join view_house mv on mv.bh_id = info.room_id
			left join base_house bh on bh.id = mv.bh_id 
			
		WHERE 1=1
			<if test="propertyType != null and propertyType != ''">	
				AND lease.use_type = #{propertyType}
			</if>
			<if test="codeCust != null and codeCust != ''">	
				AND lease.CODE = #{codeCust}
			</if>
			<if test="priceStartCust != null and priceStartCust != ''">	
				AND LEASE_PRICE &gt;= #{priceStartCust}
			</if>
			<if test="priceEndCust != null and priceEndCust != ''">	
				AND LEASE_PRICE &lt;= #{priceEndCust}
			</if>
			<if test="areaStartCust != null and areaStartCust != ''">	
				AND lease.COVERED_AREA &gt;= #{areaStartCust}
			</if>
			<if test="areaEndCust != null and areaEndCust != ''">	
				AND lease.COVERED_AREA &lt;= #{areaEndCust}
			</if>
			<if test="roomsCust != null and roomsCust != ''">
				AND ROOMS = #{roomsCust}
			</if>
			<if test="officeCust != null and officeCust != ''">
				AND OFFICE = #{officeCust}
			</if>
			<if test="wcCust != null and wcCust != ''">
				AND WC = #{wcCust}
			</if>
			<if test="kitchenCust != null and kitchenCust != ''">
				AND KITCHEN = #{kitchenCust}
			</if>
			<if test="decoradionCust != null and decoradionCust != ''">
				AND DECORADION = #{decoradionCust}
			</if>
			<if test="premisesName != null and premisesName != ''">
				AND mv.bp_name = #{premisesName}
			</if>
			<if test="busiAreaId != null and busiAreaId != ''">
				AND mv.BA1_ID = #{busiAreaId}
			</if>
			<if test="floorStartCust != null and floorStartCust != ''">	
				AND bh.num &gt;= #{floorStartCust}
			</if>
			<if test="floorEndCust != null and floorEndCust != ''">	
				AND bh.num &lt;= #{floorEndCust}
			</if>
   </select>
   
   <!-- 分页查询买卖房源 -->
   <select id="getHouseSalePage" parameterType="map" resultType="houseLeaseModel">
   		SELECT
	         sale.HOUSE_INFO_ID as houseInfoId,
	         info.CODE as code,
	         sale.sell_price as salePrice,
	         sale.COVERED_AREA as coveredArea,
	         ROOMS as rooms,
	         OFFICE as office,
	         WC as wc,	
	         CHAO_XIANG as chaoXiang,
	         DECORADION as decoradion, 
	         bh.num as floor,
          	 mv.bp_name as premisesName,
          	 mv.detail as addressDetail,
          	 mv.AC_NAME as communityName,
           	sale.OWNER_NAME as ownerName,
           	sale.use_type as useType
		FROM house_sale sale
	      	left join house_info info  on sale.house_info_id = info.id
	      	left join view_house mv on mv.bh_id = info.room_id
	      	left join base_house bh on bh.id = mv.bh_id 
		WHERE 1=1
			<if test="propertyType != null and propertyType != ''">	
				AND sale.use_type = #{propertyType}
			</if>
			<if test="codeCust != null and codeCust != ''">	
				AND sale.CODE = #{codeCust}
			</if>
			<if test="priceStartCust != null and priceStartCust != ''">	
				AND sale_price &gt;= #{priceStartCust}
			</if>
			<if test="priceEndCust != null and priceEndCust != ''">	
				AND sale_price &lt;= #{priceEndCust}
			</if>
			<if test="areaStartCust != null and areaStartCust != ''">	
				AND sale.COVERED_AREA &gt;= #{areaStartCust}
			</if>
			<if test="areaEndCust != null and areaEndCust != ''">	
				AND sale.COVERED_AREA &lt;= #{areaEndCust}
			</if>
			<if test="roomsCust != null and roomsCust != ''">
				AND ROOMS = #{roomsCust}
			</if>
			<if test="officeCust != null and officeCust != ''">
				AND OFFICE = #{officeCust}
			</if>
			<if test="wcCust != null and wcCust != ''">
				AND WC = #{wcCust}
			</if>
			<if test="kitchenCust != null and kitchenCust != ''">
				AND KITCHEN = #{kitchenCust}
			</if>
			<if test="decoradionCust != null and decoradionCust != ''">
				AND DECORADION = #{decoradionCust}
			</if>
			<if test="busiAreaId != null and busiAreaId != ''">
				AND mv.BA1_ID = #{busiAreaId}
			</if>
			<if test="premisesName != null and premisesName != ''">
				AND mv.bp_name = #{premisesName}
			</if>
			<if test="floorStartCust != null and floorStartCust != ''">	
				AND bh.num &gt;= #{floorStartCust}
			</if>
			<if test="floorEndCust != null and floorEndCust != ''">	
				AND bh.num &lt;= #{floorEndCust}
			</if>
   </select>
   
   <!-- 分页查询一手楼盘-->
   <select id="getPremisesPage" parameterType="map" resultType="BasePremisesModel">
   		SELECT
	        BP.ID AS id,
			BP.NAME AS name,
			bp.average_price as averagePrice,
     		bp.starting_at_price as startingAtPrice,
		  	mvr.addr_detail as addrDetail,
			bp.builder as builder,
			BUA.NAME AS businessName,
			ast.name as substrictName,
			ac.name as communityName,
			BA.ID AS areaId,
      		BP.AUDITING_STATUS AS auditingStatus,
			BP.TYPE AS type
			
		FROM
		(
			SELECT
				*
			FROM
				BASE_PREMISES
			WHERE
				FLAG = 1
			ORDER BY
				ID DESC
		) BP	
	      left join view_residential mvr
	   	  ON   mvr.ROAD_ID = bp.road_id
	   	  LEFT JOIN
          BUSI_AREA BUA
          ON
          BP.BUSI_AREA_ID = BUA.ID
	      LEFT JOIN area_subdistrict ast 
	      ON ast.id = bp.subdistrict_id
	      LEFT JOIN area_community ac 
	      ON ac.id = bp.community_id
	      INNER JOIN
          AREA_ROAD_NUM ARN
	      ON
	      BP.ROAD_ID = ARN.UNITE_ID
          LEFT JOIN
          BASE_AREA BA
          ON
          ARN.AREA_ID = BA.ID
	   WHERE (TYPE = 2 OR TYPE = 3)
	   <if test="name != null and name !='' ">
           AND INSTR(BP.NAME, #{name})>0
       </if>
       <if test="startingAtPriceStart != null and startingAtPriceStart != ''">	
			AND bp.starting_at_price &gt;= #{startingAtPriceStart}
		</if>
		<if test="startingAtPriceEnd != null and startingAtPriceEnd != ''">	
			AND bp.starting_at_price &lt;= #{startingAtPriceEnd}
		</if>
		<if test="averagePriceStart != null and averagePriceStart != ''">	
			AND bp.average_price &gt;= #{averagePriceStart}
		</if>
		<if test="averagePriceEnd != null and averagePriceEnd != ''">	
			AND bp.average_price &lt;= #{averagePriceEnd}
		</if>
		<if test="substrictName != null and substrictName != ''">	
			AND ast.name = #{substrictName}
		</if>
		<if test="communityName != null and communityName != ''">	
			AND ac.name = #{communityName}
		</if>
		<if test="busiAreaParentId != null and busiAreaParentId != '' and (busiAreaId == null or busiAreaId == '')">
			AND (BUA.PARENT_ID = #{busiAreaParentId} OR BP.BUSI_AREA_ID = #{busiAreaParentId})
		</if>
	   	
   </select>
   
   <!-- 保存添加房源 -->
	<insert id="saveCustTakeLook" parameterType="map">
		INSERT 
			INTO CUSTOMER_PROMISE
			(ID,PROMISE_DATE,TAKE_DATE,TAKE_TYPE,OPERATE_USER,ACCOMPANY,TAKE_USER,HOUSE_INFO_ID,CREATE_TIME,DEMAND_ID,
			PROMISE_STATUS,OPERATE_USER_ID,OPERATE_ORG_CODE)
			VALUES(
			CUSTOMER_PROMISE_SEQ.NEXTVAL, to_date(#{promiseDate},'yyyy-MM-dd HH:mi:ss'),to_date(#{takeDate},'yyyy-MM-dd HH:mi:ss'),
			#{takeType},#{operateUser},#{accompany},#{takeUser},#{houseId},sysdate,#{demandId},1,#{operateUserId},#{operateOrgCode}
			)
	</insert>	
	
	<!-- 保存添加楼盘 -->
	<insert id="savePremisesTakeLook" parameterType="map">
		INSERT 
			INTO CUSTOMER_PROMISE
			(ID,PROMISE_DATE,TAKE_DATE,TAKE_TYPE,OPERATE_USER,ACCOMPANY,TAKE_USER,PREMISES_ID,CREATE_TIME,DEMAND_ID,
			PROMISE_STATUS,OPERATE_USER_ID,OPERATE_ORG_CODE)
			VALUES(
			CUSTOMER_PROMISE_SEQ.NEXTVAL, to_date(#{promiseDate},'yyyy-MM-dd HH:mi:ss'),to_date(#{takeDate},'yyyy-MM-dd HH:mi:ss'),
			#{takeType},#{operateUser},#{accompany},#{takeUser},#{premisesId},sysdate,#{demandId},1,#{operateUserId},#{operateOrgCode}
			)
	</insert>	
	
	<!-- 根据约带看id删除一条约带看记录 -->
	<delete id="deleteCustPromisebyId" parameterType="map">
		DELETE 
		FROM CUSTOMER_PROMISE
		WHERE
			ID = #{custPromiseId}
	</delete>	
	

    <!-- 模糊查询区域(商圈) -->
	<select id="getBusiNameList" resultType="busiAreaModel" parameterType="map" >
		SELECT 
			ID AS id, 
			NAME AS busiAreaName
		FROM BUSI_AREA
	  	<where>
	  		<if test="busiAreaName != null and busiAreaName !='' ">
				INSTR(NAME, #{busiAreaName})>0
			</if>
		    <if test="noIds != null and noIds !=''"> 
				AND ID NOT IN (${noIds})
			</if>
			<if test="(inIds == null or inIds == '' )and busiAreaName == null"> 
				AND ID IN ('')
			</if>
			<if test="inIds != null and inIds != '' "> <!-- 多一步截取字符串导致inIds会为'' -->
				AND ID IN (${inIds})
			</if>
		</where>
	</select>	  
	  	   	
	<!-- 模糊查询小区(楼盘) -->
	<select id="getPremisesByMatch" resultType="basePremisesModel" >
		SELECT
			ID,
			NAME
		FROM
			BASE_PREMISES
		WHERE 
			FLAG = 1
			<if test="name != null and name !=''"> 
		     	AND INSTR(NAME,'${name}')>0
		    </if>
		    <if test="noIds != null and noIds !=''"> 
				AND ID NOT IN (${noIds})
			</if>		    
			<if test="inIds == null and name == null"> 
				AND ID IN ('')
			</if>
			<if test="inIds != null"> 
				AND ID IN (${inIds})
			</if>
		ORDER BY ID 
   	</select>
   	
   	<!-- 转入成交客户池 -->
	<update id="toDealCustomerPool" parameterType="map">
		UPDATE 
			CUSTOMER_DEMAND
		SET  	
			OPERATE_TIME = sysdate,
			DEAL_REASON = #{remark},
			CD_TYPE = 4
		WHERE
			ID = #{rowIds}	
	</update>	
	
	<!-- 模糊查询楼盘 -->
	<select id="getPremisesName" resultType="BasePremisesModel">
		SELECT
			ID AS id,
			NAME AS name
			FROM
			BASE_PREMISES
			WHERE
			(TYPE = 2 OR TYPE = 3)
			<if test="matchStr != null  and matchStr !=''">
				AND INSTR(NAME, #{matchStr}) > 0
			</if>
			ORDER BY
			ID
	</select>
	
	<!-- 分页查询约带看管理 -->
	<select id="getLookManagePage" parameterType="map"
		resultType="CustomerPromiseModel">
		SELECT 
	      CASE
          WHEN hi.demand_type = 1 THEN
          hs.owner_name
          WHEN hi.demand_type = 2 THEN
          hl.owner_name
       	  END as ownerName,
           cp.ID            as id,
           c.ID				as customerId,
	       DEMAND_ID        as demandId,
	       cp.premises_id   as premisesId,
           cp.house_info_id as houseInfoId,
	       PROMISE_DATE     as promiseDate,
	       cp.TAKE_DATE     as takeDate,
	       cp.CREATE_TIME   as followType,
	       cp.OPERATE_USER  as operateUser,
	       cp.TAKE_USER		as takeUser,
	       cp.ACCOMPANY		as accompany,
	       BP.NAME 			as premisesName,
	       PROMISE_STATUS   as promiseStatus,
	       c.user_name      as customerName,
	       cd.demand_code   as demandCode,
	       cd.demand_type   as demandType,
	       cd.property_type as propertyType,
	       hi.code          as houseCode,
	      CASE
          WHEN trunc(sysdate, 'dd') &gt; cp.take_date and
               cp.promise_status != 3 THEN 2
          WHEN trunc(sysdate, 'dd') &lt; = cp.take_date and
               cp.promise_status = 1 THEN 1
          WHEN cp.promise_status = 3 THEN 3
          END as promiseDone,
	       cp.CREATE_TIME   as createTime
	  FROM CUSTOMER_PROMISE cp
		  left join Customer_Demand cd
		    on cd.id = cp.demand_id
		  left join customers c
		    on c.id = cd.customer_id 
		  left join house_info hi
		    on hi.id = cp.house_info_id
		  LEFT JOIN HOUSE_LEASE hl
		    ON hl.house_info_id = hi.id
		  LEFT JOIN HOUSE_SALE hs
		    ON hs.house_info_id = hi.id  
		  LEFT JOIN base_premises  bp
        	on bp.id = cp.premises_id
	  WHERE 1=1
	  <if test="demandType != null and demandType != ''">
	 	 AND cd.demand_type = #{demandType}
	  </if>
	  <if test="propertyType != null and propertyType != ''">
         AND cd.property_type = #{propertyType}
	  </if> 
	  <if test="demandId != null and demandId != ''">
         AND DEMAND_ID = #{demandId}
	  </if> 
	   <if test="jingjiren != null and jingjiren != ''">
         AND cp.OPERATE_USER_ID = #{jingjiren}
	  </if> 
	   <if test="customerName != null and customerName != '' and demandCode == 1">
	 	 AND cd.demand_code = #{customerName}
	  </if>
	  <if test="customerName != null and customerName != '' and demandCode == 2">
         AND c.user_name = #{customerName}
	  </if> 
	  <if test="ownerName != null and ownerName != '' and houseCode == 1">
	 	 AND hi.code = #{ownerName}
	  </if>
	  <if test="ownerName != null and ownerName != '' and houseCode == 2">
          AND  CASE WHEN
          hi.demand_type = 1 THEN
          hs.owner_name
          WHEN hi.demand_type = 2 THEN
          hl.owner_name
       	  END = #{ownerName}
	  </if> 
	  <if test="createTimeStart != null and createTimeStart != '' and entryDate == 1">
	 	 AND cp.CREATE_TIME &gt;= to_date(#{createTimeStart},'yyyy-mm-dd ')
	  </if>
	  <if test="createTimeEnd != null and createTimeEnd != '' and entryDate == 1">
	 	 AND cp.CREATE_TIME &lt;= to_date(#{createTimeEnd},'yyyy-mm-dd ')
	  </if>
	  <if test="createTimeStart != null and createTimeStart != '' and entryDate == 2">
         AND PROMISE_DATE &gt;= to_date(#{createTimeStart},'yyyy-mm-dd ')
	  </if> 
	  <if test="createTimeEnd != null and createTimeEnd != '' and entryDate == 2">
         AND PROMISE_DATE &lt;= to_date(#{createTimeEnd},'yyyy-mm-dd ')
	  </if>
	  <if test="promiseStatus != null and promiseStatus != ''">
         AND PROMISE_STATUS = #{promiseStatus}
	  </if> 
	  order by cp.TAKE_DATE desc
	</select>	
   	
   	<!-- 修改客源 -->
   	<update id="updateCustomerSource" parameterType="map" >
   		UPDATE
   			CUSTOMER_DEMAND
		<set> 
			<if test="demandUrgent != null" > 
			DEMAND_URGENT = #{demandUrgent}, 
      		</if>
			<if test="viewHome != null" > 
			VIEWHOME = #{viewHome}, 
      		</if>
			<if test="affordPrice != null" > 
			AFFORD_PRICE = #{affordPrice},  
      		</if>
			<if test="buildArea != null" > 
			BUILD_AREA = #{buildArea},  
      		</if>
			<if test="rooms != null" > 
			ROOMS = #{rooms},  
      		</if>
			<if test="office != null" > 
			OFFICE = #{office},  
      		</if>
			<if test="wc != null" > 
			WC = #{wc},  
      		</if>
			<if test="balcony != null" > 
			BALCONY = #{balcony},  
      		</if>
			<if test="demandRegionIds != null" > 
			DEMAND_REGION_IDS = #{demandRegionIds},  
      		</if>
			<if test="demandRegion != null" > 
			DEMAND_REGION = #{demandRegion},  
      		</if>
			<if test="demandPremisesIds != null" > 
			DEMAND_PREMISES_IDS = #{demandPremisesIds},  
      		</if>
			<if test="demandPremises != null" > 
			DEMAND_PREMISES = #{demandPremises},  
      		</if>
			<if test="checkInTime != null" > 
			CHECK_IN_TIME = to_date(#{checkInTime,jdbcType=DATE},'yyyy-mm-dd'),
      		</if>
			<if test="rentTime != null" > 
			RENT_TIME = #{rentTime},  
      		</if>
			<if test="joinRent != null" > 
			JOIN_RENT = #{joinRent},  
      		</if>
			<if test="rentWay != null" > 
			RENT_WAY = #{rentWay},  
      		</if>
			<if test="deposit != null" > 
			DEPOSIT = #{deposit},  
      		</if>
			<if test="serviceCharge != null" > 
			SERVICE_CHARGE = #{serviceCharge},  
      		</if>
			<if test="buildType != null" > 
			BUILD_TYPE = #{buildType},  
      		</if>
			<if test="houseHold != null" > 
			HOUSEHOLD = #{houseHold}, 
      		</if>
			<if test="furniture != null" >  
			FURNITURE = #{furniture},  
      		</if>
			<if test="otherDemand != null" > 
			OTHER_DEMAND = #{otherDemand},  
      		</if>
			<if test="invoiceType1 != null" > 
			INVOICE_TYPE1 = #{invoiceType1},  
      		</if>
			<if test="invoiceType2 != null" > 
			INVOICE_TYPE2 = #{invoiceType2},  
      		</if>
			<if test="takeLookTime != null" > 
			TAKE_LOOK_TIME = #{takeLookTime},  
      		</if>
			<if test="invoiceHeader != null" > 
			INVOICE_HEADER = #{invoiceHeader},  
      		</if>
			<if test="remark != null" > 
			REMARK = #{remark},  
      		</if>
<!-- 			<if test="operateUser != null" > 
			OPERATE_USER = #{operateUser},  
      		</if>
			<if test="operateUserId != null" >
			OPERATE_USER_ID = #{}, 
      		</if> -->
			<if test="orientation != null" > 
			ORIENTATION = #{orientation},  
      		</if>
			<if test="decoration != null" > 
			DECORATION = #{decoration},  
      		</if>
			<if test="roomAmountStart != null" > 
			ROOM_AMOUNT_START = #{roomAmountStart},  
      		</if>
			<if test="roomAmountEnd != null" > 
			ROOM_AMOUNT_END = #{roomAmountEnd},  
      		</if>
			<if test="needFloorStart != null" > 
			NEED_FLOOR_START = #{needFloorStart},  
      		</if>
			<if test="needFloorEnd != null" > 
			NEED_FLOOR_END = #{needFloorEnd},  
      		</if>
			<if test="needFloor != null" > 
			NEED_FLOOR = #{needFloor},  
      		</if>
			<if test="houseProperty != null" > 
			HOUSE_PROPERTY = #{houseProperty},  
      		</if>
			<if test="buyQualification != null" > 
			BUY_QUALIFICATION = #{buyQualification},  
      		</if>
			<if test="buyMotivation != null" > 
			BUY_MOTIVATION = #{buyMotivation},  
      		</if>
			<if test="needBuildingType != null" > 
			NEED_BUILDING_TYPE = #{needBuildingType},  
      		</if>
			<if test="payment != null" > 
			PAYMENT = #{payment},  
      		</if>
			<if test="firstPay != null" > 
			FIRSTPAY = #{firstPay},  
      		</if>
			<if test="cusFrom != null" > 
			CUSFROM = #{cusFrom},  
      		</if>
			<if test="cusFrom2 != null" > 
			CUSFROM_2 = #{cusFrom2},  
      		</if>
			<if test="cusJudge != null" > 
			CUS_JUDGE = #{cusJudge},  
      		</if>
			<if test="sellOldBuyNew != null" > 
			SELLOLD_BUYNEW = #{sellOldBuyNew},  
      		</if>
			<if test="doorWidthStart != null" > 
			DOOR_WIDTH_START = #{doorWidthStart},  
      		</if>
			<if test="doorWidthEnd != null" > 
			DOOR_WIDTH_END = #{doorWidthEnd},  
      		</if>
			<if test="houseHeightStart != null" > 
			HOUSE_HEIGHT_START = #{houseHeightStart},  
      		</if>
			<if test="houseHeightEnd != null" > 
			HOUSE_HEIGHT_END = #{houseHeightEnd},  
      		</if>
			<if test="propertyFeeStart != null" > 
			PROPERTY_FEE_START = #{propertyFeeStart},  
      		</if>
			<if test="locationType != null" > 
			LOCATION_TYPE = #{locationType},  
      		</if>
			<if test="propertyFeeEnd != null" > 
			PROPERTY_FEE_END = #{propertyFeeEnd},  
      		</if>
			<if test="affordPriceUnit != null" > 
			AFFORD_PRICE_UNIT = #{affordPriceUnit},  
      		</if>
			<if test="buyQualification2 != null" > 
			BUY_QUALIFICATION_2 = #{buyQualification2}, 
      		</if>
		</set>
			WHERE
				ID = #{customerSourceId}
   	</update>
   	
   	<!-- 取消约带看 -->
	<update id="cancelLookManage" parameterType="map">
		UPDATE 
			CUSTOMER_PROMISE
		SET  	
			PROMISE_STATUS = 3
		WHERE
			ID = #{rowIds}	
	</update>
	
	<!-- 根据楼盘id查询一手楼盘-->
   <select id="getPremisesByid" parameterType="map" resultType="BasePremisesModel">
   		SELECT
	        BP.ID AS id,
			BP.NAME AS name,
			bp.average_price as averagePrice,
     		bp.starting_at_price as startingAtPrice,
		  	mvr.addr_detail as addrDetail,
			bp.builder as builder,
			BUA.NAME AS businessName,
			ast.name as substrictName,
			ac.name as communityName,
			BA.ID AS areaId,
      		BP.AUDITING_STATUS AS auditingStatus,
			BP.TYPE AS type
			
		FROM
		(
			SELECT
				*
			FROM
				BASE_PREMISES
			WHERE
				FLAG = 1
			ORDER BY
				ID DESC
		) BP	
	      left join view_residential mvr
	   	  ON   mvr.ROAD_ID = bp.road_id
	   	  LEFT JOIN
          BUSI_AREA BUA
          ON
          BP.BUSI_AREA_ID = BUA.ID
	      LEFT JOIN area_subdistrict ast 
	      ON ast.id = bp.subdistrict_id
	      LEFT JOIN area_community ac 
	      ON ac.id = bp.community_id
	      INNER JOIN
          AREA_ROAD_NUM ARN
	      ON
	      BP.ROAD_ID = ARN.UNITE_ID
          LEFT JOIN
          BASE_AREA BA
          ON
          ARN.AREA_ID = BA.ID
          left join customer_promise cp on cp.premises_id = bp.id
	   WHERE (TYPE = 2 OR TYPE = 3)
		<if test="custPromiseId != null and custPromiseId != ''">	
			AND cp.id = #{custPromiseId}
		</if>
   </select>
   
  <!-- 根据约带看id查询租赁房源 -->
   <select id="getHouseLeaseById" parameterType="map" resultType="houseLeaseModel">
   		SELECT
   			lease.HOUSE_INFO_ID as houseInfoId,
   			info.CODE as code,
   			LEASE_PRICE as leasePrice,
   			lease.COVERED_AREA as coveredArea,
   			ROOMS as rooms,
   			OFFICE as office,
   			WC as wc,
   			CHAO_XIANG as chaoXiang,
   			DECORADION as decoradion, 
   			bh.num as floor,
         	mv.bp_name as premisesName,
         	mv.detail as addressDetail,
           	mv.AC_NAME	as communityName,
         	lease.owner_name as ownerName,
           	lease.owner_tel as contactType,
           	info.demand_type as demandType,
           	lease.property as property,
         	lease.use_type as useType
         FROM house_lease lease
         	left join house_info info  on lease.house_info_id = info.id
			left join view_house mv on mv.bh_id = info.room_id
			left join base_house bh on bh.id = mv.bh_id 
			left join customer_promise cp on cp.HOUSE_INFO_ID = info.id
		WHERE 1=1
			<if test="custPromiseId != null and custPromiseId != ''">	
				AND cp.id = #{custPromiseId}
			</if>
   </select>
   
   <!-- 根据约带看id查询买卖房源 -->
   <select id="getHouseSaleById" parameterType="map" resultType="HouseSaleModel">
   		SELECT
	         sale.HOUSE_INFO_ID as houseInfoId,
	         info.CODE as code,
	         sale.sell_price as salePrice,
	         sale.COVERED_AREA as coveredArea,
	         ROOMS as rooms,
	         OFFICE as office,
	         WC as wc,	
	         CHAO_XIANG as chaoXiang,
	         DECORADION as decoradion, 
	         bh.num as floor,
          	 mv.bp_name as premisesName,
          	 mv.detail as addressDetail,
          	 mv.AC_NAME	as communityName,
           	sale.owner_name as ownerName,
           	sale.owner_tel as contactType,
           	info.demand_type as demandType,
           	sale.property as property,
           	sale.use_type as useType
		FROM house_sale sale
	      	left join house_info info  on sale.house_info_id = info.id
	      	left join view_house mv on mv.bh_id = info.room_id
	      	left join base_house bh on bh.id = mv.bh_id 
	      	left join customer_promise cp on cp.HOUSE_INFO_ID = info.id
	     WHERE 1=1 
			<if test="custPromiseId != null and custPromiseId != ''">	
				AND cp.id = #{custPromiseId}
			</if>
   </select>
   

   <!-- 设置为保护客源 -->
	<update id="setProtectedCust" parameterType="map">
		UPDATE 
			CUSTOMER_DEMAND
		SET  	
			ISPROTECTED = 1
		WHERE
			ID = #{rowIds}	
	</update>
	
	<!-- 取消保护该客源 -->
	<update id="cancelProtectedCust" parameterType="map">
		UPDATE 
			CUSTOMER_DEMAND
		SET  	
			ISPROTECTED = 2
		WHERE
			ID in(${rowIds})
	</update>
	
   <!-- 根据id查询该客源是否有处于新建的约带看 -->
   <select id="getTakeLookCount" parameterType="map" resultType="map">
   	SELECT 
   		 count(id) as counts, cp.demand_id  as isRepeat
   	from customer_promise cp
   	where 
   		cp.promise_status = 1 
   		<if test="rowIds != null and rowIds != ''">	
				and cp.demand_id = #{rowIds}
		</if>
   	group by 
   		cp.demand_id
   		
   </select>
   
   	<!-- 根据id查询该客源是否有处于已完成的约带看 -->
   <select id="getTakeLookDoneCount" parameterType="map" resultType="map">
			select 
				cd.id,
				count(cd.id) as count
			from customer_demand cd
			where cd.id in(
				SELECT 
	                 cd.id
	             FROM CUSTOMER_DEMAND cd
	             where 
	                 cd.demand_status = 1
	                 and cd.is_call_back != 1
	                 and trunc(cd.create_time, 'dd') = trunc(sysdate-1, 'dd')
	             group by cd.id
	             union all
	             SELECT 
	                cp.demand_id
	             FROM CUSTOMER_PROMISE cp, CUSTOMER_DEMAND cd
	             where 
	                  cp.promise_status != 3
	                  and cp.is_call_back != 1
	                  and trunc(cp.take_date, 'dd') = trunc(sysdate - 1, 'dd')
	                  and cp.demand_id = cd.id
				group by cp.demand_id
				)
			   <if test="demandId != null and demandId != '' ">
				 and cd.id = #{demandId}
			   </if> 	
			group by cd.id
   </select>
	
	
   <!-- 查询租赁推荐房源 -->
   <select id="getCustomerLeaseRecommendPage" parameterType="map" resultType="customerRecommendModel">
   		SELECT
			CR.CUSTOMER_DEMAND_ID,
	      	CR.CREATE_TIME AS createTime,
	      	INFO.ID,
	      	INFO.CODE,
	      	K.STATUS AS keyPosition,
	      	MV.BP_NAME AS premisesName,
	        L.CHAO_XIANG AS chaoXiang,
	        L.LEASE_PRICE AS totalPrice,  
	        L.COVERED_AREA AS coveredArea,    
	        L.ADDRESS_DETAIL AS addressDetail,
	        C.TYPE AS carPortType,
	        C.FLOOR AS carFloor
	    FROM 
			CUSTOMER_RECOMMEND CR
	    LEFT JOIN 
	      HOUSE_INFO INFO
	    ON 
	      CR.HOUSE_INFO_ID = INFO.ID
	    LEFT JOIN 
	      HOUSE_LEASE L
	    ON 
	      L.HOUSE_INFO_ID = INFO.ID
	    LEFT JOIN 
	      MANAGE_KEY_INFO K
	    ON 
	      K.HOUSE_INFO_ID = INFO.ID
	    LEFT JOIN 
	      VIEW_HOUSE MV 
	    ON 
	      MV.BH_ID = INFO.ROOM_ID
	    LEFT JOIN 
	      BASE_HOUSE BH 
	    ON 
	      BH.ID = MV.BH_ID 
	    LEFT JOIN 
	      CAR_PORT C 
	    ON 
	      C.ID = L.CAR_PORT_ID 	      
	    WHERE 1=1 
			AND CR.CUSTOMER_DEMAND_ID = #{custDemandId}
   </select>
   	
   <!-- 查询出售推荐房源 -->
   <select id="getCustomerSaleRecommendPage" parameterType="map" resultType="customerRecommendModel">
   		SELECT
			CR.CUSTOMER_DEMAND_ID,
	      	CR.CREATE_TIME AS createTime,
	      	INFO.ID,
	      	INFO.CODE,
	      	K.STATUS AS keyPosition,
	      	MV.BP_NAME AS premisesName,
	        S.CHAO_XIANG AS chaoXiang,
	        S.SELL_PRICE AS totalPrice,  
	        S.COVERED_AREA AS coveredArea,    
	        S.ADDRESS_DETAIL AS addressDetail,
	        C.TYPE AS carPortType,
	        C.FLOOR AS carFloor
	    FROM 
			CUSTOMER_RECOMMEND CR
	    LEFT JOIN 
	      HOUSE_INFO INFO
	    ON 
	      CR.HOUSE_INFO_ID = INFO.ID
	    LEFT JOIN 
	      HOUSE_SALE S
	    ON 
	      S.HOUSE_INFO_ID = INFO.ID
	    LEFT JOIN 
	      MANAGE_KEY_INFO K
	    ON 
	      K.HOUSE_INFO_ID = INFO.ID
	    LEFT JOIN 
	      VIEW_HOUSE MV 
	    ON 
	      MV.BH_ID = INFO.ROOM_ID
	    LEFT JOIN 
	      CAR_PORT C 
	    ON 
	      C.ID = S.CAR_PORT_ID 	  	      
	    WHERE 1=1 
			AND CR.CUSTOMER_DEMAND_ID = #{custDemandId}
   </select>
   
   <!-- 保存推荐房源 -->
	<insert id="recommend" parameterType="map">
		INSERT INTO 
			CUSTOMER_RECOMMEND
		(ID,
		CUSTOMER_DEMAND_ID,
		HOUSE_INFO_ID,
		CREATE_TIME,
		RECOMMEND_USER
		)
		VALUES(
		CUSTOMER_RECOMMEND_SEQ.NEXTVAL,
		#{custDemandId},
		#{houseInfoId},
		sysdate,
		#{recommendUser}
		)
	</insert>	
		
	<!-- 删除推荐房源 -->
	<delete id="deleteRecommend" parameterType="map">
		DELETE 
		FROM CUSTOMER_RECOMMEND
		WHERE
			CUSTOMER_DEMAND_ID = #{custDemandId}
		AND	HOUSE_INFO_ID IN (${houseInfoIds})
	</delete>

	
	 <!-- 根据客源id查询聚合的约带看信息 -->
   <select id="getPromiseModelById" parameterType="map" resultType="CustomerPromiseModel">
   		SELECT 
   		   max(cp.take_date) as takeDate,
	       count(DEMAND_ID),
	       DEMAND_ID as demandId,
	       max(c.user_name) as customerName,
	       max(cp.TAKE_USER) as takeUser,
	       max(cp.ACCOMPANY) as accompany,
	       wm_concat(bp.name) as premisesName,
	       wm_concat(hi.code) as houseCode
		FROM CUSTOMER_PROMISE cp
		  left join Customer_Demand cd
		    on cd.id = cp.demand_id
		  left join customers c
		    on c.id = cd.customer_id
		  left join house_info hi
		    on hi.id = cp.house_info_id
		  LEFT JOIN HOUSE_LEASE hl
		    ON hl.house_info_id = hi.id
		  LEFT JOIN HOUSE_SALE hs
		    ON hs.house_info_id = hi.id
		  LEFT JOIN base_premises bp
		    on bp.id = cp.premises_id
		WHERE
			DEMAND_ID = #{id}	
			and cp.take_date = trunc(sysdate - 1, 'dd')and
       		cp.promise_status != 3 	    
	    group by DEMAND_ID
   </select>


	
	<!-- 分页查询约带看记录tab -->
	<select id="getTakeLookTabPage" parameterType="map"
		resultType="CustomerPromiseModel">
		SELECT
			CP.ID AS id,
			C.ID AS customerId,
			DEMAND_ID AS demandId,
			CP.PREMISES_ID AS premisesId,
			CP.HOUSE_INFO_ID AS houseInfoId,
			PROMISE_DATE AS promiseDate,
			CP.TAKE_DATE AS takeDate,
			CP.OPERATE_USER AS operateUser,
			CP.TAKE_USER AS takeUser,
			BP.NAME AS premisesName,
			MV.BP_NAME AS premisesName2,
			CD.DEMAND_CODE AS demandCode,
			CD.DEMAND_TYPE AS demandType,
			CD.PROPERTY_TYPE AS propertyType,
			HI.CODE AS houseCode,
			CP.CREATE_TIME AS createTime,	      
			CASE
			WHEN HI.DEMAND_TYPE = 1 THEN
	        HS.SELL_PRICE 
			WHEN HI.DEMAND_TYPE = 2 THEN
	        HL.LEASE_PRICE 
			END AS totalPrice,
			CP.VISIT_TIME AS visitTime,
			CP.REMARK AS remark
		FROM CUSTOMER_PROMISE CP
			LEFT JOIN CUSTOMER_DEMAND CD
			ON CD.ID = CP.DEMAND_ID
			LEFT JOIN CUSTOMERS C
			ON C.ID = CD.CUSTOMER_ID
			LEFT JOIN HOUSE_INFO HI
			ON HI.ID = CP.HOUSE_INFO_ID
			LEFT JOIN HOUSE_LEASE HL
			ON HL.HOUSE_INFO_ID = HI.ID
			LEFT JOIN HOUSE_SALE HS
			ON HS.HOUSE_INFO_ID = HI.ID
			LEFT JOIN BASE_PREMISES BP
			ON BP.ID = CP.PREMISES_ID
			LEFT JOIN VIEW_HOUSE MV
			ON MV.BH_ID = HI.ROOM_ID
		WHERE 1=1
		<if test="demandId != null and demandId != ''">
			AND CP.DEMAND_ID = #{demandId}
		</if> 
  </select>
	<!-- 保存推荐房源 -->
	<insert id="saveCustCallBack" parameterType="map">
		INSERT INTO 
			CUSTOMER_CALL_BACK
			(ID,
			<if test="promiseId != null and promiseId !=''">PROMISE_ID,</if>
			DEMAND_ID,
			<if test="premisesId != null and premisesId !=''">PREMISES_ID,</if>
			<if test="houseId != null and houseId !=''">HOUSE_ID,</if>
			REMARK,
			CALL_BACK_TIME,
			OPERATE_USER
			)
			VALUES(
			CUSTOMER_CALL_BACK_SEQ.NEXTVAL,
			<if test="promiseId != null and promiseId !=''">#{promiseId},</if>
			#{demandId},
			<if test="premisesId != null and premisesId !=''">#{premisesId},</if>
			<if test="houseId != null and houseId !=''">#{houseId},</if>
			#{remark},
			sysdate,
			#{operateUser}
			)
	</insert>	
	
	<!-- 回访后修改客源状态 -->
	<update id="setCustCallBackStatus" parameterType="map">
		update
			 customer_demand cd
		   	 set cd.is_call_back = 1
		where 
		     cd.id = #{demandId}
		     and trunc(cd.create_time, 'dd') = trunc(sysdate - 1, 'dd')
		     and cd.id in (
		     			SELECT 
		     				 cd.id
                   		FROM CUSTOMER_DEMAND cd
		                where cd.demand_status = 1
		                group by cd.id
		                )	
	</update>	
	
	<!-- 回访后修改约带看状态 -->
	<update id="setPromiseCallBackStatus" parameterType="map">
		update
			 customer_promise cp
		   	 set cp.is_call_back = 1
		 where 
		 	cp.demand_id = #{demandId}
		 	and trunc(cp.take_date, 'dd') = trunc(sysdate - 1, 'dd')
      		and cp.demand_id in (
      							SELECT 
      							   cp.demand_id
	                            FROM CUSTOMER_PROMISE cp, CUSTOMER_DEMAND cd
	                            where trunc(sysdate, 'dd') > trunc(cp.take_date, 'dd')
		                           and cp.promise_status != 3
		                           and cp.demand_id = cd.id
	                            group by cp.demand_id)
	</update>	
	
   <!-- 根据demandId查询promiseId -->
   <select id="getPromiseIdByDemandId" parameterType="map" resultType="Integer">
   		SELECT 
   		 	 cp.id  as id
   		from customer_promise cp,
   			 CUSTOMER_DEMAND cd
   		where 
   			cp.demand_id = cd.id
   			and trunc(cp.take_date, 'dd') = trunc(sysdate - 1, 'dd')
         	and cp.promise_status != 3
   			and cd.id = #{demandId}
   </select>
   
   <!-- 分页查询约带看回访信息 -->
   <select id="getCustCallBackPage" parameterType="map"
		resultType="CustomerCallBackModel">
	   SELECT 
	   		cd.id as demandId,
	        count(cp.id) as promiseCount,
	        trunc(cp.take_date, 'dd') as takeDate,
	        max(cb.operate_user) as operateUser,
	        max(c.user_name) as customerName,
	        max(cb.call_back_time) as callBackTime,
	        max(cb.remark) as remark,
	        cp.is_call_back as isCallBack,
	        cd.demand_code as demandCode
       FROM CUSTOMER_PROMISE cp
	   left join Customer_Demand cd
	     on cd.id = cp.demand_id
	   left join customers c
	     on c.id = cd.customer_id
	   left join Customer_Call_Back cb
	     on cb.promise_id = cp.id
	  WHERE cp.promise_status != 3 
	  		<if test="callBackTimeStart != null and callBackTimeStart != ''">
				AND cb.call_back_time &gt;= to_date(#{callBackTimeStart},'yyyy-mm-dd ')
			</if>
			<if test="callBackTimeEnd != null and callBackTimeEnd != ''">
				AND cb.call_back_time &lt;= to_date(#{callBackTimeEnd},'yyyy-mm-dd ')
			</if>
			<if test="entryDateStart != null and entryDateStart != ''">
				AND cp.CREATE_TIME &gt;= to_date(#{entryDateStart},'yyyy-mm-dd ')
			</if>
			<if test="entryDateEnd != null and entryDateEnd != ''">
				AND cp.CREATE_TIME &lt;= to_date(#{entryDateEnd},'yyyy-mm-dd ')
			</if>
			<if test="takeDateStart != null and takeDateStart != ''">
				AND cp.TAKE_DATE &gt;= to_date(#{takeDateStart},'yyyy-mm-dd ')
			</if>
			<if test="takeDateEnd != null and takeDateEnd != ''">
				AND cp.TAKE_DATE &lt;= to_date(#{takeDateEnd},'yyyy-mm-dd ')
			</if>
			<if test="demandCode != null and demandCode != ''">
				AND cd.demand_code = #{demandCode}
			</if>
			<if test="isCallBack != null and isCallBack != ''">
				AND cp.is_call_back = #{isCallBack}
			</if>
			<if test="entryPerson != null and entryPerson != ''">
				AND cp.OPERATE_USER = #{entryPerson}
			</if>
			<if test="takeUser != null and takeUser != ''">
				AND cp.TAKE_USER = #{takeUser}
			</if>
			<if test="accompany != null and accompany != ''">
				AND cp.ACCOMPANY = #{accompany}
			</if>
			<if test="operateUser != null and operateUser != ''">
				AND cb.operate_user = #{operateUser}
			</if>
	  group by cd.demand_code, cp.take_date, cp.is_call_back ,cd.id 
   </select>	
   
    <!-- 分页查询客源回访约带看详情 -->
   <select id="getCallBackPromisePage" parameterType="map"
		resultType="CustomerPromiseModel">
		select 
		    CASE
         	WHEN hi.demand_type = 1 THEN
          	sale.use_type
         	WHEN hi.demand_type = 2 THEN
          	lease.use_type
       		END as useType,
		   cp.demand_id as demandId,
	       cp.create_time as createTime,
	       cp.take_date as takeDate,
	       cp.take_user as takeUser,
	       cp.accompany as accompany,
	       cp.remark as remark,
	       hi.id as houseInfoId,
	       hi.code as houseCode,
	       hi.demand_type as demandType
		FROM CUSTOMER_PROMISE cp
		  left join Customer_Demand cd
		   on cd.id = cp.demand_id
		  left join house_info hi
		   on hi.id = cp.house_info_id
		  left join house_lease lease
		   on lease.house_info_id = hi.id
		  left join house_sale sale
		   on sale.house_info_id = hi.id
	    where 
		   cp.demand_id = #{demandId}
		   and trunc(cp.take_date, 'dd') = to_date(#{takeDate},'yyyy-MM-dd')
   </select>	
   
 	<!-- 将客户转为私客 -->
	<insert id="savePrivateCustomer" parameterType="map">
		INSERT 
			INTO CUSTOMER_PRIVATE
			(ID,DEMAND_ID,OPERATE_USER,OPERATE_USER_ID,CREATE_TIME,AGENT,AGENT_ID)
			VALUES(
			CUSTOMER_PRIVATE_SEQ.NEXTVAL, 
			#{demandId},#{operatePerson},#{operateUserId},sysdate,#{operateUser},#{agentId}
			)
	</insert>	
	
	 <!-- 根据id查询该客源是否是私客 -->
   <select id="isPrivateCustomer" parameterType="map" resultType="Integer">
   	SELECT 
   		 count(id) as count
   	from CUSTOMER_PRIVATE
   	where 
   		DEMAND_ID = #{demandId}
		and AGENT_ID = #{agentId}
   </select>
	
	
	<!-- 分页查询跟进记录tab -->
	<select id="getFollowTabPage" parameterType="map"
		resultType="CustomerSourceFollowModel">
		SELECT
			CF.ID,
			CF.CUSTOMER_SOURCE_ID,
			CF.FOLLOW_WAY AS followWay,
			CF.FOLLOW_TIME AS followTime,
			CF.CONTENT AS content,
			CF.NEXT_TIME AS nextTime,
			CF.NEXT_CONTENT AS nextContent,
			CF.OPERATE_USER AS operaterUser,
			CF.OPERATE_USER_ID AS operaterUserId,
			CF.CREATE_TIME AS createTime,
			CD.DEMAND_CODE AS demandCode,
			CD.DEMAND_TYPE AS demandType,
			CD.PROPERTY_TYPE AS propertyType
		FROM CUSTOMER_SOURCE_FOLLOW CF
		LEFT JOIN CUSTOMER_DEMAND CD
		ON CD.ID = CF.CUSTOMER_SOURCE_ID
		WHERE 1=1
		<if test="demandId != null and demandId != ''">
			AND CF.CUSTOMER_SOURCE_ID = #{demandId}
		</if> 
	 </select>
	 
	<!-- 保存跟进信息 -->
	<insert id="follow" parameterType="map">
		INSERT INTO 
			CUSTOMER_SOURCE_FOLLOW
			(ID,
			CUSTOMER_SOURCE_ID,
			FOLLOW_WAY,
			FOLLOW_TIME,
			CONTENT,
			OPERATE_USER,
			OPERATE_USER_ID,
			OPERATE_ORG,
			CREATE_TIME
			)
			VALUES(
			CUSTOMER_SOURCE_FOLLOW_SEQ.NEXTVAL,
			#{custDemandId},
			#{followWay},
			to_date(#{followTime},'yyyy-MM-dd HH:MI:ss'),
			#{content},
			#{operateUser},
			#{operateUserId},
			#{orgCode},
			sysdate
			)
	</insert>	
		
	<!-- 分页查询分配记录tab -->
	<select id="getDispatchTabPage" parameterType="map"
		resultType="dispatchLogModel">
		SELECT
			ID,
			DEMAND_CODE AS demandCode,
			CHARGE_BEFORE AS chargeBefore,
			CHARGE_AFTER AS chargeAfter,
			OPERATE_USER AS operateUser,
			OPERATE_TIME AS operateTime
		FROM CUSTOMER_DISPATCH_LOG
		WHERE 1=1
		<if test="demandId != null and demandId != ''">
			AND CUSTOMER_SOURCE_ID = #{demandId}
		</if> 
	 </select>
	 
	<!-- 保存调配客源-->
	<update id="saveDispatchCustSource" parameterType="map">
		UPDATE 
			CUSTOMER_DEMAND
		SET  	
			OPERATE_USER = #{jingjirenName},
			OPERATE_USER_ID = #{jingjirenId}
		WHERE
			ID =#{rowIds}
	</update>
	
	<!-- 保存调配客源-->
	<update id="saveCustToPubPool" parameterType="map">
		UPDATE 
			CUSTOMER_DEMAND
		SET  	
			CD_TYPE = 2,
			OPERATE_TIME = sysdate
		WHERE
			ID =#{rowIds}
	</update>
	
	<!-- 保存转介客源 -->
	<insert id="transferCustomerToOther" parameterType="map">
		INSERT 
			INTO CUSTOMER_REFERRAL
			(ID,DEMAND_ID,TRANSFER_USER,TRANSFER_USER_ID,TRANSFER_DATE,RECEIVE_USER,RECEIVE_USER_ID,
			REFERRAL_ORG_CODE,REFERRAL_ORG_NAME,BROKERAGE_RATIO)
			VALUES(
			CUSTOMER_REFERRAL_SEQ.NEXTVAL, 
			#{demandId},#{transferUser},#{transferUserId},sysdate,#{receiveUser},#{receiveUserId},
			#{receiveOrgCode},#{receiveOrgName},#{rate}
			)
	</insert>	
	
	<!-- 分页查询客源转介 -->
	<select id="getCustTransferPage" parameterType="map"
		resultType="CustomerSourceModel">
		select 
		   cr.id 				 as transferId,
	       cr.brokerage_ratio    as rate,
	       cr.status			 as transferStatus,
	       cr.receive_user_id	 as receiveUserId,
	       cr.receive_user		 as receiveUser,
	       cd.id 				 as transferDemandId,
	       cd.OPERATE_USER    	 as operateUser,
	       cd.CUS_JUDGE      	 as custJudge,
	       cd.org_code        	 as operateOrg,
	       cd.DEMAND_URGENT      as demandUrgent,
	       cd.AFFORD_PRICE       as affordPrice,
	       cd.BUILD_AREA         as buildArea,
	       cd.ROOMS          	 as rooms,
	       cd.OFFICE             as office,
	       cd.WC                 as wc,
	       c.USER_NAME       	 as userName,
	       cd.DEMAND_PREMISES    as demandPremises,
	       cd.rent_time          as rentTime,
	       cd.FIRSTPAY           as firstPay,
	       cd.BUILD_TYPE         as buildType,
	       cd.demand_code        as demandCode,
	       cd.TAKE_LOOK_TIME     as takeLookTime
	       
		from customer_referral cr
		left join customer_demand cd
		    on cd.id = cr.demand_id
		left join CUSTOMERS c
		    on cd.CUSTOMER_ID = c.ID
		WHERE 1=1
			<if test="transferType == 1 and currentUser != null and currentUser != ''">
			AND TRANSFER_USER_ID = #{currentUser}
			</if> 
			<if test="transferType == 2 and currentUser != null and currentUser != ''">
			AND RECEIVE_USER_ID = #{currentUser}
			</if>
		    
	</select>		
	
	<!-- 确认接收转介客源 -->
	<update id="confirmReceiveTransfer" parameterType="map">
		UPDATE 
			customer_referral cr
		SET  	
			cr.status = 2
		WHERE
			ID = #{transferId} 
	</update>
	
	<!-- 确认接收转介客源后修改归属部门和归属人 -->
	<update id="updateUserAfterTransfer" parameterType="map">
		UPDATE 
			CUSTOMER_DEMAND cd
		SET  	
			cd.OPERATE_USER_ID = #{receiveUserId},
			cd.OPERATE_USER = #{receiveUser},
			cd.ORG_CODE = #{operateOrg}
		WHERE
			cd.ID = #{demandId}	
	</update>
	
	<!-- 拒绝接收转介客源 -->
	<update id="refuseReceiveTransfer" parameterType="map">
		UPDATE 
			customer_referral cr
		SET  	
			cr.status = 3
		WHERE
			ID = #{transferId} 
	</update>
	
	<!-- 根据客源id查询该客源的保护状态 -->
	<select id="getProtectedByDemandId" resultType="Integer">
		select 
			cd.isprotected as isprotected
		from 
			customer_demand cd 
		where 
			cd.id = #{demandId}
	</select>
	
	<!-- 根据客源id查询该客源的cdType状态 -->
	<select id="getDealedByDemandId" resultType="Integer">
		select 
			cd.CD_TYPE as cdType
		from 
			customer_demand cd 
		where 
			cd.id = #{demandId}
	</select>

</mapper>