<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="basePremises">

	<!-- 楼盘列表 -->
	<select id="getPremisesPage" parameterType="map" resultType="basePremisesModel">
		SELECT
			BP.ID AS ID,
			BP.NAME AS NAME,
			BP.HOUSING_TYPE AS HOUSINGTYPE,
			NVL(RESIDENCE.BUIDING_NUM, 0) AS RESIDENCENUM,
			NVL(RESIDENCE.UNITS_NUM, 0) AS RESIDENCEUNITS,
			NVL(RESIDENCE.ROOM_TOTAL, 0) AS RESIDENCEROOMS,
			'缺省数据(住宅租赁)' AS RESIDENCELEASE,
			'缺省数据(住宅出售)' AS RESIDENCESALES,
			NVL(BUSINESS.BUIDING_NUM, 0) AS BUSINESSNUM,
			NVL(BUSINESS.UNITS_NUM, 0) AS BUSINESSUNITS,
			NVL(BUSINESS.ROOM_TOTAL, 0) AS BUSINESSROOMS,
			'缺省数据(商业租赁)' AS BUSINESSLEASE,
			'缺省数据(商业出售)' AS BUSINESSSALES,
			BP.PARKING_NUM AS PARKINGNUM,
			BP.TYPE AS TYPE,
			BA.ID AS AREAID,
			BA.NAME AS AREANAME,
			BUA.NAME AS BUSIAREANAME,
			'缺省数据(责任区)' AS RESPONSIBILITYZONE,
			'缺省数据(实体店)' AS PHYSICALSTORE,
			'缺省数据(责任组)' AS RESPONSIBILITYGROUP,
			'缺省数据(责任人)' AS RESPONSIBILITYPERSON,
			BP.STATUS AS STATUS,
			BP.AUDITING_STATUS AS AUDITINGSTATUS,
			BP.HIDDEN AS HIDDEN,
			BP.SALE_SEAL AS SALESEAL,
			BP.LEASE_SEAL AS LEASESEAL,
			BP.MAINTENANCE_CATEGORY AS MAINTENANCECATEGORY,
			BP.COMPLETE_STATUS AS COMPLETESTATUS,
			BP.DATA_STATUS AS DATASTATUS
		FROM
		(
			SELECT
				*
			FROM
				BASE_PREMISES
			WHERE
				FLAG = 1
			ORDER BY
				ID DESC
		) BP
		INNER JOIN
			AREA_ROAD_NUM ARN
		ON
			BP.ROAD_ID = ARN.UNITE_ID
		LEFT JOIN
			AREA_ROAD AR
		ON
			ARN.ROAD_ID = AR.ID
		LEFT JOIN
			BASE_AREA BA
		ON
			ARN.AREA_ID = BA.ID
		LEFT JOIN
			BUSI_AREA BUA
		ON
			BP.BUSI_AREA_ID = BUA.ID
		LEFT JOIN
		(
			SELECT
				PREMISES_ID,
				SUM(ID) AS BUIDING_NUM,
				SUM(UNITS_NUM) AS UNITS_NUM,
				SUM(ROOM_TOTAL) AS ROOM_TOTAL
			FROM
			(
				SELECT
					BB.PREMISES_ID AS PREMISES_ID,
					COUNT(BB.ID) AS ID,
					0 AS UNITS_NUM,
					0 AS ROOM_TOTAL
				FROM
					BASE_BUILDING BB
				WHERE
					BB.PURPOSE = 1 OR
					BB.PURPOSE = 4
				GROUP BY
					BB.PREMISES_ID
				UNION ALL
				SELECT
					BU.PREMISES_ID AS PREMISES_ID,
					0 AS ID,
					COUNT(BU.ID) AS UNITS_NUM,
					0 AS ROOM_TOTAL
				FROM
					BUILDING_UNITS BU
				WHERE
					BU.PURPOSE = 1
				GROUP BY
					BU.PREMISES_ID
				UNION ALL
				SELECT
					BH.PREMISES_ID AS PREMISES_ID,
					0 AS ID,
					0 AS UNITS_NUM,
					COUNT(BH.ID) AS ROOM_TOTAL
				FROM
					BASE_HOUSE BH
				WHERE
					BH.PURPOSE = 1
				GROUP BY
					BH.PREMISES_ID
			)
			GROUP BY
				PREMISES_ID
			ORDER BY
				PREMISES_ID
		) RESIDENCE
		ON
			BP.ID = RESIDENCE.PREMISES_ID
		LEFT JOIN
		(
			SELECT
				PREMISES_ID,
				SUM(ID) AS BUIDING_NUM,
				SUM(UNITS_NUM) AS UNITS_NUM,
				SUM(ROOM_TOTAL) AS ROOM_TOTAL
			FROM
			(
				SELECT
					BB.PREMISES_ID AS PREMISES_ID,
					COUNT(BB.ID) AS ID,
					0 AS UNITS_NUM,
					0 AS ROOM_TOTAL
				FROM
					BASE_BUILDING BB
				WHERE
					BB.PURPOSE = 2 OR
					BB.PURPOSE = 3
				GROUP BY
					BB.PREMISES_ID
				UNION ALL
				SELECT
					BU.PREMISES_ID AS PREMISES_ID,
					0 AS ID,
					COUNT(BU.ID) AS UNITS_NUM,
					0 AS ROOM_TOTAL
				FROM
					BUILDING_UNITS BU
				WHERE
					BU.PURPOSE = 2 OR
					BU.PURPOSE = 3
				GROUP BY
					BU.PREMISES_ID
				UNION ALL
				SELECT
					BH.PREMISES_ID AS PREMISES_ID,
					0 AS ID,
					0 AS UNITS_NUM,
					COUNT(BH.ID) AS ROOM_TOTAL
				FROM
					BASE_HOUSE BH
				WHERE
					BH.PURPOSE = 2 OR
					BH.PURPOSE = 3
				GROUP BY
					BH.PREMISES_ID
			)
			GROUP BY
				PREMISES_ID
			ORDER BY
				PREMISES_ID
		) BUSINESS
		ON
			BP.ID = BUSINESS.PREMISES_ID
		<where>
			<if test="areaId != null and areaId != ''">
				AND BA.ID = #{areaId}
			</if>
			<if test="busiAreaParentId != null and busiAreaParentId != '' and (busiAreaId == null or busiAreaId == '')">
				AND (BUA.PARENT_ID = #{busiAreaParentId} OR BP.BUSI_AREA_ID = #{busiAreaParentId})
			</if>
			<if test="busiAreaId != null and busiAreaId != ''">
				AND BP.BUSI_AREA_ID = #{busiAreaId}
			</if>
			<if test="buildingAge != null and buildingAge != ''">
				AND BP.BUILDING_AGE = #{buildingAge}
			</if>
			<if test="housingPurposes != null and housingPurposes != ''">
				AND BP.HOUSING_PURPOSES = #{housingPurposes}
			</if>
			<if test="type != null and type != ''">
				AND BP.TYPE = #{type}
			</if>
			<if test="maintenanceCategory != null and maintenanceCategory != ''">
				AND BP.MAINTENANCE_CATEGORY = #{maintenanceCategory}
			</if>
			<if test="completeStatus != null and completeStatus != ''">
				AND BP.COMPLETE_STATUS = #{completeStatus}
			</if>
			<if test="dataStatus != null and dataStatus != ''">
				AND BP.DATA_STATUS = #{dataStatus}
			</if>
		</where>
	</select>

	<!-- 隐藏/显示 -->
	<update id="updateHidden" parameterType="map">
		UPDATE
			BASE_PREMISES
		SET
			HIDDEN = #{hidden}
		WHERE
			ID = #{premisesId}
	</update>

	<!-- 买卖封盘/买卖解封 -->
	<update id="updateSaleSeal" parameterType="map">
		UPDATE
			BASE_PREMISES
		SET
			SALE_SEAL = #{saleSeal}
		WHERE
			ID = #{premisesId}
	</update>

	<!-- 租赁封盘/租赁解封 -->
	<update id="updateLeaseSeal" parameterType="map">
		UPDATE
			BASE_PREMISES
		SET
			LEASE_SEAL = #{leaseSeal}
		WHERE
			ID = #{premisesId}
	</update>

	<!-- 新增楼盘 -->
	<insert id="addPremises" useGeneratedKeys="true" parameterType="map">
		<selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="premisesId">
			SELECT BASE_PREMISES_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO
			BASE_PREMISES
		(
			ID,
			TYPE,
			NAME,
			<if test="alias != null and alias != ''">
			ALIAS,
			</if>
			ROAD_ID,
			<if test="busiAreaId != null and busiAreaId != ''">
			BUSI_AREA_ID,
			</if>
			<if test="subdistrictId != null and subdistrictId != ''">
			SUBDISTRICT_ID,
			</if>
			<if test="communityId != null and communityId != ''">
			COMMUNITY_ID,
			</if>
			<if test="alternateAddress != null and alternateAddress != ''">
			ALTERNATE_ADDRESS,
			</if>
			<if test="buildingAge != null and buildingAge != ''">
			BUILDING_AGE,
			</if>
			HOUSING_PURPOSES,
			<if test="landUsageTerm != null and landUsageTerm != ''">
			LAND_USAGE_TERM,
			</if>
			<if test="buildingStructure != null and buildingStructure != ''">
			BUILDING_STRUCTURE,
			</if>
			<if test="buildingType != null and buildingType != ''">
			BUILDING_TYPE,
			</if>
			<if test="housingProperty != null and housingProperty != ''">
			HOUSING_PROPERTY,
			</if>
			<if test="regionMeasure != null and regionMeasure != ''">
			REGION_MEASURE,
			</if>
			<if test="areaCovered != null and areaCovered != ''">
			AREA_COVERED,
			</if>
			<if test="overallFloorage != null and overallFloorage != ''">
			OVERALL_FLOORAGE,
			</if>
			<if test="plotRatio != null and plotRatio != ''">
			PLOT_RATIO,
			</if>
			<if test="greeningRate != null and greeningRate != ''">
			GREENING_RATE,
			</if>
			<if test="parkingNum != null and parkingNum != ''">
			PARKING_NUM,
			</if>
			<if test="maintenanceCategory != null and maintenanceCategory != ''">
			MAINTENANCE_CATEGORY,
			</if>
			<if test="housingType != null and housingType != ''">
			HOUSING_TYPE,
			</if>
			<if test="startingAtPrice != null and startingAtPrice != ''">
			STARTING_AT_PRICE,
			</if>
			<if test="averagePrice != null and averagePrice != ''">
			AVERAGE_PRICE,
			</if>
			<if test="developer != null and developer != ''">
			PREMISES_DEVELOPER,
			</if>
			<if test="builder != null and builder != ''">
			PREMISES_BUILDER,
			</if>
			<if test="agent != null and agent != ''">
			PREMISES_AGENT,
			</if>
			<if test="hasPropertyManagementCompany != null and hasPropertyManagementCompany != ''">
			HAS_PROPERTY_MANAGEMENT_COMPAN,
			</if>
			<if test="propertyManagementCompany != null and propertyManagementCompany != ''">
			PROPERTY_MANAGEMENT_COMPANY,
			</if>
			<if test="companyAddress != null and companyAddress != ''">
			COMPANY_ADDRESS,
			</if>
			<if test="propertyFee != null and propertyFee != ''">
			PROPERTY_FEE,
			</if>
			<if test="cleaningFee != null and cleaningFee != ''">
			CLEANING_FEE,
			</if>
			<if test="busStation != null and busStation != ''">
			BUS_STATION,
			</if>
			<if test="subwayStation != null and subwayStation != ''">
			SUBWAY_STATION,
			</if>
			<if test="openingTime != null and openingTime != ''">
			OPENING_TIME,
			</if>
			<if test="checkInTime != null and checkInTime != ''">
			CHECK_IN_TIME,
			</if>
			<if test="agentType != null and agentType != ''">
			AGENT_TYPE,
			</if>
			<if test="salesStartDate != null and salesStartDate != ''">
			SALES_START_DATE,
			</if>
			<if test="salesEndDate != null and salesEndDate != ''">
			SALES_END_DATE,
			</if>
			<if test="commissionRate != null and commissionRate != ''">
			COMMISSION_RATE,
			</if>
			<if test="expectEarnings != null and expectEarnings != ''">
			EXPECT_EARNINGS,
			</if>
			<if test="tradedHouseholds != null and tradedHouseholds != ''">
			TRADED_HOUSEHOLDS,
			</if>
			<if test="contacts != null and contacts != ''">
			CONTACTS,
			</if>
			<if test="contactsPhone != null and contactsPhone != ''">
			CONTACTS_PHONE,
			</if>
			<if test="salesAddress != null and salesAddress != ''">
			SALES_ADDRESS,
			</if>
			<if test="permitForPresale != null and permitForPresale != ''">
			PERMIT_FOR_PRESALE,
			</if>
			<if test="supportingFacilities != null and supportingFacilities != ''">
			SUPPORTING_FACILITIES,
			</if>
			<if test="houseType != null and houseType != ''">
			HOUSE_TYPE,
			</if>
			<if test="totalBuildings != null and totalBuildings != ''">
			TOTAL_BUILDINGS,
			</if>
			<if test="totalApartments != null and totalApartments != ''">
			TOTAL_APARTMENTS,
			</if>
			STATUS,
			<if test="eduIds != null and eduIds != ''">
			EDU_IDS,
			</if>
			<if test="livingFacilities != null and livingFacilities != ''">
			LIVING_FACILITIES,
			</if>
			<if test="communitySafe != null and communitySafe != ''">
			COMMUNITY_SAFE,
			</if>
			<if test="hotSpotClassificationLease != null and hotSpotClassificationLease != ''">
			HOT_SPOT_CLASSIFICATION_LEASE,
			</if>
			<if test="hotSpotClassificationSales != null and hotSpotClassificationSales != ''">
			HOT_SPOT_CLASSIFICATION_SALES,
			</if>
			<if test="premisesProfile != null and premisesProfile != ''">
			PREMISES_PROFILE,
			</if>
			<if test="farmProductMarket != null and farmProductMarket != ''">
			FARM_PRODUCT_MARKET,
			</if>
			<if test="supermarket != null and supermarket != ''">
			SUPERMARKET,
			</if>
			<if test="entertainment != null and entertainment != ''">
			ENTERTAINMENT,
			</if>
			<if test="bankParkHospital != null and bankParkHospital != ''">
			BANK_PARK_HOSPITAL,
			</if>
			<if test="remark != null and remark != ''">
			REMARK,
			</if>
			FLAG
		)
		VALUES
		(
			#{premisesId},
			#{type},
			#{name},
			<if test="alias != null and alias != ''">
			#{alias},
			</if>
			#{roadId},
			<if test="busiAreaId != null and busiAreaId != ''">
			#{busiAreaId},
			</if>
			<if test="subdistrictId != null and subdistrictId != ''">
			#{subdistrictId},
			</if>
			<if test="communityId != null and communityId != ''">
			#{communityId},
			</if>
			<if test="alternateAddress != null and alternateAddress != ''">
			#{alternateAddress},
			</if>
			<if test="buildingAge != null and buildingAge != ''">
			#{buildingAge},
			</if>
			#{housingPurposes},
			<if test="landUsageTerm != null and landUsageTerm != ''">
			#{landUsageTerm},
			</if>
			<if test="buildingStructure != null and buildingStructure != ''">
			#{buildingStructure},
			</if>
			<if test="buildingType != null and buildingType != ''">
			#{buildingType},
			</if>
			<if test="housingProperty != null and housingProperty != ''">
			#{housingProperty},
			</if>
			<if test="regionMeasure != null and regionMeasure != ''">
			#{regionMeasure},
			</if>
			<if test="areaCovered != null and areaCovered != ''">
			#{areaCovered},
			</if>
			<if test="overallFloorage != null and overallFloorage != ''">
			#{overallFloorage},
			</if>
			<if test="plotRatio != null and plotRatio != ''">
			#{plotRatio},
			</if>
			<if test="greeningRate != null and greeningRate != ''">
			#{greeningRate},
			</if>
			<if test="parkingNum != null and parkingNum != ''">
			#{parkingNum},
			</if>
			<if test="maintenanceCategory != null and maintenanceCategory != ''">
			#{maintenanceCategory},
			</if>
			<if test="housingType != null and housingType != ''">
			#{housingType},
			</if>
			<if test="startingAtPrice != null and startingAtPrice != ''">
			#{startingAtPrice},
			</if>
			<if test="averagePrice != null and averagePrice != ''">
			#{averagePrice},
			</if>
			<if test="developer != null and developer != ''">
			#{developer},
			</if>
			<if test="builder != null and builder != ''">
			#{builder},
			</if>
			<if test="agent != null and agent != ''">
			#{agent},
			</if>
			<if test="hasPropertyManagementCompany != null and hasPropertyManagementCompany != ''">
			#{hasPropertyManagementCompany},
			</if>
			<if test="propertyManagementCompany != null and propertyManagementCompany != ''">
			#{propertyManagementCompany},
			</if>
			<if test="companyAddress != null and companyAddress != ''">
			#{companyAddress},
			</if>
			<if test="propertyFee != null and propertyFee != ''">
			#{propertyFee},
			</if>
			<if test="cleaningFee != null and cleaningFee != ''">
			#{cleaningFee},
			</if>
			<if test="busStation != null and busStation != ''">
			#{busStation},
			</if>
			<if test="subwayStation != null and subwayStation != ''">
			#{subwayStation},
			</if>
			<if test="openingTime != null and openingTime != ''">
			TO_DATE(#{openingTime},'YYYY-MM-DD HH24:MI:SS'),
			</if>
			<if test="checkInTime != null and checkInTime != ''">
			TO_DATE(#{checkInTime},'YYYY-MM-DD HH24:MI:SS'),
			</if>
			<if test="agentType != null and agentType != ''">
			#{agentType},
			</if>
			<if test="salesStartDate != null and salesStartDate != ''">
			TO_DATE(#{salesStartDate},'YYYY-MM-DD HH24:MI:SS'),
			</if>
			<if test="salesEndDate != null and salesEndDate != ''">
			TO_DATE(#{salesEndDate},'YYYY-MM-DD HH24:MI:SS'),
			</if>
			<if test="commissionRate != null and commissionRate != ''">
			#{commissionRate},
			</if>
			<if test="expectEarnings != null and expectEarnings != ''">
			#{expectEarnings},
			</if>
			<if test="tradedHouseholds != null and tradedHouseholds != ''">
			#{tradedHouseholds},
			</if>
			<if test="contacts != null and contacts != ''">
			#{contacts},
			</if>
			<if test="contactsPhone != null and contactsPhone != ''">
			#{contactsPhone},
			</if>
			<if test="salesAddress != null and salesAddress != ''">
			#{salesAddress},
			</if>
			<if test="permitForPresale != null and permitForPresale != ''">
			#{permitForPresale},
			</if>
			<if test="supportingFacilities != null and supportingFacilities != ''">
			#{supportingFacilities},
			</if>
			<if test="houseType != null and houseType != ''">
			#{houseType},
			</if>
			<if test="totalBuildings != null and totalBuildings != ''">
			#{totalBuildings},
			</if>
			<if test="totalApartments != null and totalApartments != ''">
			#{totalApartments},
			</if>
			#{status},
			<if test="eduIds != null and eduIds != ''">
			#{eduIds},
			</if>
			<if test="livingFacilities != null and livingFacilities != ''">
			#{livingFacilities},
			</if>
			<if test="communitySafe != null and communitySafe != ''">
			#{communitySafe},
			</if>
			<if test="hotSpotClassificationLease != null and hotSpotClassificationLease != ''">
			#{hotSpotClassificationLease},
			</if>
			<if test="hotSpotClassificationSales != null and hotSpotClassificationSales != ''">
			#{hotSpotClassificationSales},
			</if>
			<if test="premisesProfile != null and premisesProfile != ''">
			#{premisesProfile},
			</if>
			<if test="farmProductMarket != null and farmProductMarket != ''">
			#{farmProductMarket},
			</if>
			<if test="supermarket != null and supermarket != ''">
			#{supermarket},
			</if>
			<if test="entertainment != null and entertainment != ''">
			#{entertainment},
			</if>
			<if test="bankParkHospital != null and bankParkHospital != ''">
			#{bankParkHospital},
			</if>
			<if test="remark != null and remark != ''">
			#{remark},
			</if>
			1
		)
	</insert>

	<select id="queryPremises" parameterType="map" resultType="basePremisesModel">
		SELECT
			BP.ID AS ID,
			BP.LAT AS LAT,
			BP.LNG AS LNG,
			BP.TYPE AS TYPE,
			BP.NAME AS NAME,
			BP.ALIAS AS ALIAS,
			ARNA.AREA_ID AS AREAID,
			BP.ROAD_ID AS ROADID,
			ARNA.ADDR_DETAIL AS ADDRDETAIL,
			CASE WHEN BA.PARENT_ID IS NULL THEN BA.ID ELSE BA.PARENT_ID END AS BUSIAREAPARENTID,
			CASE WHEN BA.PARENT_ID IS NOT NULL THEN BA.ID END AS BUSIAREAID,
			BP.SUBDISTRICT_ID AS SUBDISTRICTID,
			BP.COMMUNITY_ID AS COMMUNITYID,
			BP.ALTERNATE_ADDRESS AS ALTERNATEADDRESS,
			BG.GROUP_NAME AS BUILDINGGROUP,
			BP.BUILDING_AGE AS BUILDINGAGE,
			BP.HOUSING_PURPOSES AS HOUSINGPURPOSES,
			BP.LAND_USAGE_TERM AS LANDUSAGETERM,
			BP.BUILDING_STRUCTURE AS BUILDINGSTRUCTURE,
			BP.BUILDING_TYPE AS BUILDINGTYPE,
			BP.HOUSING_PROPERTY AS HOUSINGPROPERTY,
			BP.REGION_MEASURE AS REGIONMEASURE,
			BP.AREA_COVERED AS AREACOVERED,
			BP.OVERALL_FLOORAGE AS OVERALLFLOORAGE,
			BP.PLOT_RATIO AS PLOTRATIO,
			BP.GREENING_RATE AS GREENINGRATE,
			BP.PARKING_NUM AS PARKINGNUM,
			BP.MAINTENANCE_CATEGORY AS MAINTENANCECATEGORY,
			BP.HOUSING_TYPE AS HOUSINGTYPE,
			BP.STARTING_AT_PRICE AS STARTINGATPRICE,
			BP.AVERAGE_PRICE AS AVERAGEPRICE,
			BP.PREMISES_DEVELOPER AS DEVELOPER,
			BP.PREMISES_BUILDER AS BUILDER,
			BP.PREMISES_AGENT AS AGENT,
			BP.HAS_PROPERTY_MANAGEMENT_COMPAN AS HASPROPERTYMANAGEMENTCOMPANY,
			BP.PROPERTY_MANAGEMENT_COMPANY AS PROPERTYMANAGEMENTCOMPANY,
			BP.COMPANY_ADDRESS AS COMPANYADDRESS,
			BP.PROPERTY_FEE AS PROPERTYFEE,
			BP.CLEANING_FEE AS CLEANINGFEE,
			BP.BUS_STATION AS BUSSTATION,
			BP.SUBWAY_STATION AS SUBWAYSTATION,
			BP.OPENING_TIME AS OPENINGTIME,
			BP.CHECK_IN_TIME AS CHECKINTIME,
			BP.AGENT_TYPE AS AGENTTYPE,
			BP.SALES_START_DATE AS SALESSTARTDATE,
			BP.SALES_END_DATE AS SALESENDDATE,
			BP.COMMISSION_RATE AS COMMISSIONRATE,
			BP.EXPECT_EARNINGS AS EXPECTEARNINGS,
			BP.TRADED_HOUSEHOLDS AS TRADEDHOUSEHOLDS,
			BP.CONTACTS AS CONTACTS,
			BP.CONTACTS_PHONE AS CONTACTSPHONE,
			BP.SALES_ADDRESS AS SALESADDRESS,
			BP.PERMIT_FOR_PRESALE AS PERMITFORPRESALE,
			BP.SUPPORTING_FACILITIES AS SUPPORTINGFACILITIES,
			BP.HOUSE_TYPE AS HOUSETYPE,
			CASE WHEN BP.TYPE = 1 THEN BUSINESS_UNITS_NUM.UNITS_NUM ELSE BP.TOTAL_BUILDINGS END AS TOTALBUILDINGS,
			CASE WHEN BP.TYPE = 1 THEN BUSINESS_UNITS_NUM.ROOM_TOTAL ELSE BP.TOTAL_APARTMENTS END AS TOTALAPARTMENTS,
			BP.STATUS AS STATUS,
			BP.EDU_IDS AS EDUIDS,
			BP.LIVING_FACILITIES AS LIVINGFACILITIES,
			BP.COMMUNITY_SAFE AS COMMUNITYSAFE,
			BP.HOT_SPOT_CLASSIFICATION_LEASE AS HOTSPOTCLASSIFICATIONLEASE,
			BP.HOT_SPOT_CLASSIFICATION_SALES AS HOTSPOTCLASSIFICATIONSALES,
			BP.PREMISES_PROFILE AS PREMISESPROFILE,
			BP.FARM_PRODUCT_MARKET AS FARMPRODUCTMARKET,
			BP.SUPERMARKET AS SUPERMARKET,
			BP.ENTERTAINMENT AS ENTERTAINMENT,
			BP.BANK_PARK_HOSPITAL AS BANKPARKHOSPITAL,
			BP.REMARK AS REMARK
		FROM
			BASE_PREMISES BP
		INNER JOIN
			AREA_ROAD_NUM_ADDR ARNA
		ON
			BP.ROAD_ID = ARNA.UNITE_ID
		LEFT JOIN
			BUSI_AREA BA
		ON
			BP.BUSI_AREA_ID = BA.ID
		LEFT JOIN
		(
			SELECT
				BP.ID AS ID,
				COUNT(BU.ID) AS UNITS_NUM,
				NVL(SUM(BU.ROOM_TOTAL), 0) AS ROOM_TOTAL
			FROM
				BASE_PREMISES BP
			LEFT JOIN
				BASE_BUILDING BB
			ON
				BP.ID = BB.PREMISES_ID AND
				BB.PURPOSE = 2
			LEFT JOIN
				BUILDING_UNITS BU
			ON
				BB.ID = BU.BUILDING_ID
			GROUP BY
				BP.ID
		) BUSINESS_UNITS_NUM
		ON
			BP.ID = BUSINESS_UNITS_NUM.ID
		LEFT JOIN
		(
			SELECT
				PREMISES_ID AS PREMISES_ID,
				MAX(GROUP_NAME) AS GROUP_NAME
			FROM
			(
			SELECT
				PREMISES_ID AS PREMISES_ID,
				WMSYS.WM_CONCAT(GROUP_NAME) OVER(PARTITION BY PREMISES_ID ORDER BY ID) AS GROUP_NAME
			FROM
				BUILDING_GROUP
			)
			GROUP BY
				PREMISES_ID
		) BG
		ON
			BP.ID = BG.PREMISES_ID
		WHERE
			BP.ID = #{premisesId}
	</select>

	<!-- 修改楼盘 -->
	<update id="updatePremises" parameterType="map">
		UPDATE
			BASE_PREMISES
		<set>
			<if test="type != null">
			TYPE = #{type},
			</if>
			<if test="name != null">
			NAME = #{name},
			</if>
			<if test="alias != null">
			ALIAS = #{alias},
			</if>
			<if test="roadId != null">
			ROAD_ID = #{roadId},
			</if>
			<if test="busiAreaId != null">
			BUSI_AREA_ID = #{busiAreaId},
			</if>
			<if test="subdistrictId != null">
			SUBDISTRICT_ID = #{subdistrictId},
			</if>
			<if test="communityId != null">
			COMMUNITY_ID = #{communityId},
			</if>
			<if test="alternateAddress != null">
			ALTERNATE_ADDRESS = #{alternateAddress},
			</if>
			<if test="buildingAge != null">
			BUILDING_AGE = #{buildingAge},
			</if>
			<if test="housingPurposes != null">
			HOUSING_PURPOSES = #{housingPurposes},
			</if>
			<if test="landUsageTerm != null">
			LAND_USAGE_TERM = #{landUsageTerm},
			</if>
			<if test="buildingStructure != null">
			BUILDING_STRUCTURE = #{buildingStructure},
			</if>
			<if test="buildingType != null">
			BUILDING_TYPE = #{buildingType},
			</if>
			<if test="housingProperty != null">
			HOUSING_PROPERTY = #{housingProperty},
			</if>
			<if test="regionMeasure != null">
			REGION_MEASURE = #{regionMeasure},
			</if>
			<if test="areaCovered != null">
			AREA_COVERED = #{areaCovered},
			</if>
			<if test="overallFloorage != null">
			OVERALL_FLOORAGE = #{overallFloorage},
			</if>
			<if test="plotRatio != null">
			PLOT_RATIO = #{plotRatio},
			</if>
			<if test="greeningRate != null">
			GREENING_RATE = #{greeningRate},
			</if>
			<if test="parkingNum != null">
			PARKING_NUM = #{parkingNum},
			</if>
			<if test="maintenanceCategory != null">
			MAINTENANCE_CATEGORY = #{maintenanceCategory},
			</if>
			<if test="housingType != null">
			HOUSING_TYPE = #{housingType},
			</if>
			<if test="startingAtPrice != null">
			STARTING_AT_PRICE = #{startingAtPrice},
			</if>
			<if test="averagePrice != null">
			AVERAGE_PRICE = #{averagePrice},
			</if>
			<if test="developer != null">
			PREMISES_DEVELOPER = #{developer},
			</if>
			<if test="builder != null">
			PREMISES_BUILDER = #{builder},
			</if>
			<if test="agent != null">
			PREMISES_AGENT = #{agent},
			</if>
			<if test="hasPropertyManagementCompany != null">
			HAS_PROPERTY_MANAGEMENT_COMPAN = #{hasPropertyManagementCompany},
			</if>
			<if test="propertyManagementCompany != null">
			PROPERTY_MANAGEMENT_COMPANY = #{propertyManagementCompany},
			</if>
			<if test="companyAddress != null">
			COMPANY_ADDRESS = #{companyAddress},
			</if>
			<if test="propertyFee != null">
			PROPERTY_FEE = #{propertyFee},
			</if>
			<if test="cleaningFee != null">
			CLEANING_FEE = #{cleaningFee},
			</if>
			<if test="busStation != null">
			BUS_STATION = #{busStation},
			</if>
			<if test="subwayStation != null">
			SUBWAY_STATION = #{subwayStation},
			</if>
			<if test="openingTime != null">
			OPENING_TIME = TO_DATE(#{openingTime},'YYYY-MM-DD HH24:MI:SS'),
			</if>
			<if test="checkInTime != null">
			CHECK_IN_TIME = TO_DATE(#{checkInTime},'YYYY-MM-DD HH24:MI:SS'),
			</if>
			<if test="agentType != null">
			AGENT_TYPE = #{agentType},
			</if>
			<if test="salesStartDate != null">
			SALES_START_DATE = TO_DATE(#{salesStartDate},'YYYY-MM-DD HH24:MI:SS'),
			</if>
			<if test="salesEndDate != null">
			SALES_END_DATE = TO_DATE(#{salesEndDate},'YYYY-MM-DD HH24:MI:SS'),
			</if>
			<if test="commissionRate != null">
			COMMISSION_RATE = #{commissionRate},
			</if>
			<if test="expectEarnings != null">
			EXPECT_EARNINGS = #{expectEarnings},
			</if>
			<if test="tradedHouseholds != null">
			TRADED_HOUSEHOLDS = #{tradedHouseholds},
			</if>
			<if test="contacts != null">
			CONTACTS = #{contacts},
			</if>
			<if test="contactsPhone != null">
			CONTACTS_PHONE = #{contactsPhone},
			</if>
			<if test="salesAddress != null">
			SALES_ADDRESS = #{salesAddress},
			</if>
			<if test="permitForPresale != null">
			PERMIT_FOR_PRESALE = #{permitForPresale},
			</if>
			<if test="supportingFacilities != null">
			SUPPORTING_FACILITIES = #{supportingFacilities},
			</if>
			<if test="houseType != null">
			HOUSE_TYPE = #{houseType},
			</if>
			<if test="totalBuildings != null">
			TOTAL_BUILDINGS = #{totalBuildings},
			</if>
			<if test="totalApartments != null">
			TOTAL_APARTMENTS = #{totalApartments},
			</if>
			<if test="status != null">
			STATUS = #{status},
			</if>
			<if test="eduIds != null">
			EDU_IDS = #{eduIds},
			</if>
			<if test="livingFacilities != null">
			LIVING_FACILITIES = #{livingFacilities},
			</if>
			<if test="communitySafe != null">
			COMMUNITY_SAFE = #{communitySafe},
			</if>
			<if test="hotSpotClassificationLease != null">
			HOT_SPOT_CLASSIFICATION_LEASE = #{hotSpotClassificationLease},
			</if>
			<if test="hotSpotClassificationSales != null">
			HOT_SPOT_CLASSIFICATION_SALES = #{hotSpotClassificationSales},
			</if>
			<if test="premisesProfile != null">
			PREMISES_PROFILE = #{premisesProfile},
			</if>
			<if test="farmProductMarket != null">
			FARM_PRODUCT_MARKET = #{farmProductMarket},
			</if>
			<if test="supermarket != null">
			SUPERMARKET = #{supermarket},
			</if>
			<if test="entertainment != null">
			ENTERTAINMENT = #{entertainment},
			</if>
			<if test="bankParkHospital != null">
			BANK_PARK_HOSPITAL = #{bankParkHospital},
			</if>
			<if test="lng != null and lng !=''">
			LNG = #{lng},
			</if>
			<if test="lat != null and lat !=''">
			LAT = #{lat},
			</if>
			<if test="remark != null">
			REMARK = #{remark}
			</if>
		</set>
		WHERE
			ID = #{premisesId}
	</update>

	<select id="getHousingResources" parameterType="map" resultType="java.lang.Integer">
		SELECT
			COUNT(0)
		FROM
			HOUSE_INFO HI
		INNER JOIN
			BASE_HOUSE BH
		ON
			HI.ROOM_ID = BH.ID
		WHERE
			BH.PREMISES_ID = #{premisesId}
	</select>

	<!-- 删除楼盘 -->
	<update id="deletePremises" parameterType="map">
		UPDATE
			BASE_PREMISES
		SET
			FLAG = 2
		WHERE
			ID = #{premisesId}
	</update>

	<!-- 模糊匹配详细地址 -->
	<select id="getAddrDetail" parameterType="map" resultType="map">
		SELECT
			*
		FROM
		(
			SELECT
				TMP_TB.*,
				ROWNUM ROW_ID
			FROM
			(
				SELECT
					ARNA.AREA_ID AS AREAID,
					ARNA.UNITE_ID AS ROADID,
					ARNA.ADDR_DETAIL AS ADDRDETAIL
				FROM
					AREA_ROAD_NUM_ADDR ARNA
				WHERE
					CONTAINS(ARNA.ADDR_DETAIL, #{matchStr}) > 0 AND
					ARNA.STATUS = 1 AND
					NOT EXISTS
						(
							SELECT
								ROAD_ID
							FROM
								BASE_PREMISES BP
							WHERE
								BP.FLAG = 1 AND
								ARNA.UNITE_ID = BP.ROAD_ID
						) AND
					NOT EXISTS
						(
							SELECT
								ROAD_ID
							FROM
								AROUND_EDU_FACILITIES AEF
							WHERE
								AEF.STATUS = 1 AND
								ARNA.UNITE_ID = AEF.ROAD_ID
						)
				ORDER BY
					ARNA.UNITE_ID
			) TMP_TB
			WHERE
				ROWNUM &lt; 31
		)
		WHERE
			ROW_ID &gt;= 1
	</select>

	<!-- 模糊匹配站点信息 -->
	<select id="getSiteLineListByMatch" parameterType="map" resultType="map">
		SELECT
			SL.ID AS ID,
			SL.SITE_NAME AS SITENAME,
			MAX(SL.LINENAME) AS LINENAME
		FROM
		(
		SELECT
			ASITE.ID,
			ASITE.SITE_NAME,
			WMSYS.WM_CONCAT(ALINE.LINE_NAME) OVER(PARTITION BY ASITE.ID ORDER BY ALINE.ID) AS LINENAME
		FROM
			AROUND_SITE ASITE
		INNER JOIN
			AROUND_SITE_LINE ASL
		ON
			ASITE.ID = ASL.SITE_ID
		LEFT JOIN
			AROUND_LINE ALINE
		ON
			ASL.LINE_ID = ALINE.ID
		WHERE
			ASITE.TRAFFIC_TYPE = #{trafficType}
		<if test="noIds != null and noIds !=''">
			AND ASITE.ID NOT IN (${noIds})
		</if>
		<if test="inIds == null and matchStr == null">
			AND ASITE.ID IN ('')
		</if>
		<if test="inIds != null">
			AND ASITE.ID IN (${inIds})
		</if>
		<if test="matchStr != null and matchStr !=''">
			AND INSTR(ASITE.SITE_NAME, #{matchStr}) > 0
		</if>
		) SL
		GROUP BY
			SL.ID,
			SL.SITE_NAME
		ORDER BY
			SL.ID
	</select>

	<!-- 模糊匹配教育设施 -->
	<select id="getEduListByMatch" parameterType="map" resultType="map">
		SELECT
			AEF.ID AS EDUID,
			AEF.NAME AS EDUNAME
		FROM
			AROUND_EDU_FACILITIES AEF
		WHERE
			AEF.STATUS = 1
		<if test="noIds != null and noIds !=''">
			AND AEF.ID NOT IN (${noIds})
		</if>
		<if test="inIds == null and matchStr == null">
			AND AEF.ID IN ('')
		</if>
		<if test="inIds != null">
			AND AEF.ID IN (${inIds})
		</if>
		<if test="matchStr != null and matchStr !=''">
			AND INSTR(AEF.NAME, #{matchStr}) > 0
		</if>
		ORDER BY
			AEF.ID
	</select>

	<!-- 提交审核 -->
	<update id="auditingPremises" parameterType="map">
		UPDATE
			BASE_PREMISES
		SET
			AUDITING_STATUS = 2
		WHERE
			ID = #{premisesId}
	</update>
	
	<!-- 信息展示—根据楼盘id查询楼盘信息 -->
	<select id="getPemisesInfoById" parameterType="map" resultType="basePremisesModel">
		SELECT
			  p.id,
		      p.name,
		      p.type,
		      p.housing_type AS housingType,  
		      to_char(p.sales_start_date,'yyyy-mm-dd')AS salesStartDateFormat,
		      p.starting_at_price AS startingAtPrice,
		      p.land_usage_term AS landUsageTerm,
		      p.area_covered AS areaCovered,
		      p.overall_floorage AS overallFloorage,
		      p.property_fee AS propertyFee,
		      p.edu_ids AS eduIds,
		      p.bus_station AS busStation,
		      p.subway_station AS subwayStation,
		      p.premises_profile AS premisesProfile,
		      p.bank_park_hospital AS bankParkHospital,
		      p.farm_product_market AS farmProductMarket,
		      p.supermarket AS supermarket,
		      p.supporting_facilities AS supportingFacilities,
		      p.entertainment AS entertainment, 
		      mv.addr_detail AS addrDetail,
			  a. NAME AS busiAreaName,
			  s. NAME AS subdistrictName,
			  c. NAME AS communityName,
			  (
				SELECT
					ba. NAME
				FROM
					busi_area ba
				WHERE
					ba.id = a.parent_id
			  ) AS busiAreaParentName,
			  p.remark,
			  p.PROPERTY_MANAGEMENT_COMPANY AS propertyManagementCompany,
			  P.HOUSING_PURPOSES AS housingPurposes,
			  p.BUILDING_STRUCTURE AS buildingStructure
		FROM
			base_premises p
		LEFT JOIN VIEW_RESIDENTIAL mv ON mv.road_id = p.road_id
		      AND mv.road_num = p.road_num
		LEFT JOIN busi_area a ON a.id = p.busi_area_id
		LEFT JOIN area_subdistrict s ON s.id = p.subdistrict_id
		LEFT JOIN area_community c ON c.id = p.community_id
		WHERE
			p.ID = #{id}
   	</select>
   	
   	<!-- 楼盘id查询楼盘信息List lb -->
	<select id="getPemisesInfoList" parameterType="map" resultType="basePremisesModel">
		SELECT
			  p.id,
		      p.name,
		      p.type,
		      p.housing_type AS housingType,  
		      to_char(p.sales_start_date,'yyyy-mm-dd')AS salesStartDateFormat,
		      p.starting_at_price AS startingAtPrice,
		      p.land_usage_term AS landUsageTerm,
		      p.area_covered AS areaCovered,
		      p.overall_floorage AS overallFloorage,
		      p.property_fee AS propertyFee,
		      p.edu_ids AS eduIds,
		      p.bus_station AS busStation,
		      p.subway_station AS subwayStation,
		      p.premises_profile AS premisesProfile,
		      p.bank_park_hospital AS bankParkHospital,
		      p.farm_product_market AS farmProductMarket,
		      p.supermarket AS supermarket,
		      p.supporting_facilities AS supportingFacilities,
		      p.entertainment AS entertainment
		FROM base_premises p
		where  FLAG = 1 and HIDDEN = 1 and AUDITING_STATUS = 2
			<if test="pemisesId != null  and pemisesId !=''">
		        and p.id = #{pemisesId}
		    </if>
			<if test="matchStr != null  and matchStr !=''">
		     	and p.NAME like '%${matchStr}%'
		    </if>
   	</select>
   	
   	<!-- 查询楼盘图片 -->
   	<select id="getPemisesImages" parameterType="map" resultType="java.lang.String">
   		SELECT
			folder_name || '/' || file_name_long
		FROM
			premises_images
		WHERE
			1 = 1
		AND REPRESENT_PIC = 1
		<if test="id !=null and id!=''">
			AND premises_id = #{id}
		</if>
		UNION ALL
			SELECT
				folder_name || '/' || file_name_long
			FROM
				premises_images
			WHERE
				1 = 1
			AND (REPRESENT_PIC != 1 OR REPRESENT_PIC IS NULL)
			<if test="id !=null and id!=''">
				AND premises_id = #{id}
			</if>
   	</select>
   	 	<!-- 查询已撒道路号是否已存在楼盘 -->
   	<select id="getPemisesCount" parameterType="map" resultType="java.lang.Integer">
   		SELECT
			count(0)
		FROM
			BASE_PREMISES
		WHERE subStr(ROAD_ID,0,length(ROAD_ID)-5) in (${roadId})
   	</select>
   	  	 	<!-- 查询已撒道路号是否已存在楼盘 -->
   	<select id="getPemisesCounts" parameterType="map" resultType="java.lang.Integer">
   		SELECT
			count(0)
		FROM
			BASE_PREMISES
		WHERE ROAD_ID = #{uniteId}
   	</select>
   	<!-- 修改楼盘时，先查询某些数据 -->
   	<select id="queryPremisesForUpdate" parameterType="map" resultType="basePremisesModel">
		SELECT
			BP.ROAD_ID roadId,
			BP.name,
			(select count(t.id) from BASE_HOUSE t where t.PREMISES_ID = #{premisesId}) totalHouseholds
		FROM
			BASE_PREMISES BP
		WHERE BP.ID = #{premisesId}
	</select>
	  	 	<!-- 删除街道或社区时判断是否被楼盘引用 -->
   	<select id="getDeteleVerify" parameterType="map" resultType="java.lang.Integer">
   		SELECT
			count(0)
		FROM
			BASE_PREMISES
		<where>
			<if test="type==1">
				SUBDISTRICT_ID in(${rowIds})
			</if>
			<if test="type==2">
				COMMUNITY_ID in(${rowIds})
			</if>
		</where>
   	</select>
</mapper>