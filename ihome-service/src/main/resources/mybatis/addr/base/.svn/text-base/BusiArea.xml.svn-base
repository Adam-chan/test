<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 商圈 -->
<mapper namespace="busiArea" >
   <sql id="Base_Column_List" >
    ID as id, NAME as busiAreaName, PARENT_ID as parentId, LNG as lng, LAT as lat, SORT as sort, REMARK as remark
  </sql>
  
   <!-- 根据主键获取商圈表数据 -->
  <select id="getBusiArea" resultType="busiAreaModel" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from BUSI_AREA
    where ID IN (${id})
  </select>
  
  <!-- 根据主键获取商圈表数据 -->
  <select id="getBusiAreaCount" resultType="java.lang.Integer" parameterType="map" >
    select 
    	   count(0)
    from BUSI_AREA a
    <where>
   		<if test="busiZoning != null and busiZoning !='' ">
				a.parent_id ${busiZoning}
		</if>
		<if test="busiarea != null and busiarea !='' ">
				and a.parent_id ${busiarea}
		</if>
	</where>
  </select> 
   <!-- 根据名字获取商圈表数据 -->
  <select id="getBusiNameList" resultType="busiAreaModel" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from BUSI_AREA a
    	<where>
    		<if test="busiAreaName != null and busiAreaName !='' ">
				 instr(a.name , #{busiAreaName})>0
			</if>
			<if test="busiName != null and busiName !='' ">
				 a.name =#{busiName} 
			</if>
			<if test="updataBusiName !=  null and updataBusiName !=''and busiAreaId != null and busiAreaId !='' ">
			     a.name =#{updataBusiName} and a.id  &lt;&gt; #{busiAreaId}
			</if>	
			
		</where>
  </select>
  
   <!-- 获取区划的全部列表 -->
  <select id="getbusiZoningAll" resultType="busiAreaModel" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
   from BUSI_AREA a where a.parent_id is null
  </select>
  
 <!-- 根据主键删除商圈数据 -->
  <delete id="delete" parameterType="map" >
    delete from BUSI_AREA
    where ID IN (${ids})
  </delete>
  
  <!-- 插入商圈数据全 -->
 <insert id="insert" parameterType="map" >
    insert into BUSI_AREA (ID, NAME, PARENT_ID, 
      LNG, LAT, SORT, REMARK
      )
    values (#{id,jdbcType=DECIMAL}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=DECIMAL}, 
      #{lng,jdbcType=VARCHAR}, #{lat,jdbcType=VARCHAR}, #{sort,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  
   <!-- 有选择插入 -->
  <insert id="insertSelective" parameterType="map" >
  	<selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="id">
	SELECT BUSI_AREA_SEQ.NEXTVAL FROM DUAL
	</selectKey>
    insert into BUSI_AREA
    <trim prefix="(" suffix=")" suffixOverrides="," >
        ID
      <if test="busiName != null" >
        ,NAME
      </if>
      <if test="parentId != null" >
       , PARENT_ID
      </if>
      <if test="lng != null" >
        ,LNG
      </if>
      <if test="lat != null" >
        ,LAT
      </if>
      <if test="sort != null" >
        ,SORT
      </if>
      <if test="remark != null" >
        ,REMARK
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{id}
      <if test="busiName != null" >
        ,#{busiName,jdbcType=VARCHAR}
      </if>
      <if test="parentId != null" >
       , #{parentId,jdbcType=DECIMAL}
      </if>
      <if test="lng != null" >
        ,#{lng,jdbcType=VARCHAR}
      </if>
      <if test="lat != null" >
        ,#{lat,jdbcType=VARCHAR}
      </if>
      <if test="sort != null" >
       , #{sort,jdbcType=DECIMAL}
      </if>
      <if test="remark != null" >
        ,#{remark,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>
  
   <!-- 有选择跟新 -->
  <update id="updateBySelective" parameterType="map" >
    update BUSI_AREA
    <set >
      <if test="busiName != null" >
        NAME = #{busiName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        PARENT_ID = #{parentId,jdbcType=DECIMAL},
      </if>
      <if test="lng != null" >
        LNG = #{lng,jdbcType=VARCHAR},
      </if>
      <if test="lat != null" >
        LAT = #{lat,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        SORT = #{sort,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
        </if>
    </set>
    where ID = #{businessAreaId,jdbcType=DECIMAL}
  </update>
  <!-- 跟新商圈数据 -->
  <update id="updateBusiArea" parameterType="busiAreaModel" >
    update BUSI_AREA
    set NAME = #{busiName,jdbcType=VARCHAR},
      PARENT_ID = #{parentId,jdbcType=DECIMAL},
      LNG = #{lng,jdbcType=VARCHAR},
      LAT = #{lat,jdbcType=VARCHAR},
      SORT = #{sort,jdbcType=DECIMAL},
      REMARK = #{remark,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
    <!-- 建立商圈和行政区关联 -->
   <insert id="insertRelation" parameterType="map" >
    insert into BUSI_AREA_ADMIN 
  	 values (#{businessAreaId},#{adminId})
  </insert>
  <!-- 删除商圈和行政区关联 -->
   <delete id="deleteRelation" parameterType="map" >
    delete from BUSI_AREA_ADMIN
    where BUSI_AREA_ID IN (${businessAreaId}) 
  </delete>
     <!-- 查询商圈 业务列表 -->
	<!-- 1级 -->
	<resultMap id="busiAreaModelMap" type="busiAreaModel">
		<id property="id" column="id" />
		<result property="busiAreaName" column="busiAreaName" />
		<result property="pid" column="pId" />
		<result property="busiZoningId" column="busiZoningId" />
		<result property="busiZoningName" column="busiZoningName" />
		<result property="hoursNum" column="hoursNum" />
		<result property="sort" column="sort" />
		<result property="remark" column="remark" />
		<result property="lng" column="lng" />
		<result property="lat" column="lat" />
		<result property="statistics" column="statistics" />
		<collection property="list" resultMap="adminAreaMap" />
	</resultMap>
	<!-- 2级 -->
	<resultMap id="adminAreaMap" type="adminAreaModel">
		<id property="adminId" column="adminId" />
		<result property="mergerName" column="mergerName" />
		<result property="name" column="name" />
	</resultMap>
	<select id="getBusiAreaQCPage" parameterType="map" resultMap="busiAreaModelMap">
	   select a.id as id,
         case
         when d.name is null then
            a.name
         else
            d.name
         end as busiZoningName,
         case
         when d.name is null then
           ''
         else
           a.name
         end as busiAreaName,
         c.pid as pId,
         case
           when d.id is null then
         a.id
         else
         d.id
       end as busiZoningId,
       c.id as adminId,
       c.merger_name as mergerName,
       (select count(e.BUSI_AREA_ID)from BASE_PREMISES e where e.BUSI_AREA_ID = a.id) as hoursNum,
       a.sort as sort,
       a.remark as remark,
       a.lat as lat,
       a.lng as lng,
       c.name as name,
       g.statistics as statistics
     from BUSI_AREA a
     left join BUSI_AREA_ADMIN b
     on a.id = b.busi_area_id
     left join BASE_AREA c
     on c.id = b.admin_id
     left join BUSI_AREA d
     on d.id = a.parent_id
     left join ( select count(f.PARENT_ID)as statistics,f.PARENT_ID as pid  from busi_area f group by f.PARENT_ID 
     ) g on g.pid = a.id
		<where>
			<if test="busiZoning != null and busiZoning !='' ">
				a.parent_id ${busiZoning}
			</if>
			<if test="busiarea != null and busiarea !='' ">
				and a.parent_id ${busiarea}
			</if>
			<if test="cityId != null and cityId !='' ">
				and c.pid =#{cityId}
			</if>
			<if test="areaId !=null and areaId != '' ">
				and b.ADMIN_ID = #{areaId}
			</if>
			<if test="busiName !=null and busiName != ''">
				and instr(a.name , #{busiName})>0
			</if>
			<if test="busiAreaId !=null">
				and  a.id =#{busiAreaId}
			</if>
		</where>
		 <choose>
			 <when test="sord!=null and sord !=''">
		 		order by a.sort ${sord}
		 	</when>
			 <otherwise>
			     order by a.sort
			 </otherwise>
		 </choose>
		 
	</select>
	
	<select id="getBusiAreas" parameterType="map" resultMap="busiAreaModelMap">
	       select a.id as id,
	         case
	         when d.name is null then
	            a.name
	         else
	            d.name
	         end as busiZoningName,
	         case
	         when d.name is null then
	           ''
	         else
	           a.name
	         end as busiAreaName,
	         c.pid as pId,
	         case
	           when d.id is null then
	         a.id
	         else
	         d.id
	       end as busiZoningId,
	       c.id as adminId,
	       c.merger_name as mergerName,
	       (select count(e.BUSI_AREA_ID)from BASE_PREMISES e where e.BUSI_AREA_ID = a.id) as hoursNum,
	       a.sort as sort,
	       a.remark as remark,
	       a.lat as lat,
	       a.lng as lng,
	       c.name as name
	     from BUSI_AREA a
	     left join BUSI_AREA_ADMIN b
	     on a.id = b.busi_area_id
	     left join BASE_AREA c
	     on c.id = b.admin_id
	     left join BUSI_AREA d
	     on d.id = a.parent_id
		<where>
			<if test="cityId != null and cityId !='' ">
				c.pid =#{cityId}
			</if>
			<if test="busiZoningId !=  null ">
			 	a.id = #{busiZoningId}
			</if>	
			<if test="areaId !=null and areaId != '' ">
				and b.ADMIN_ID = #{areaId}
			</if>
			<if test="busiName !=null and busiName != ''">
				and instr(a.name , #{busiName})>0
			</if>
			<if test="busiAreaId !=null">
				and  a.id =#{busiAreaId}
			</if>
			<if test="busiAreaIds !=null">
				and  a.id =#{busiAreaIds} and a.parent_id is not null
			</if>
		</where>
	</select>
	<!--  -->
	<select id="getQueryBusiArea" parameterType="map" resultType="busiAreaModel">
		SELECT
			ID AS ID,
			NAME AS BUSIAREANAME
		FROM
		(
			SELECT
				CASE WHEN BA2.ID IS NULL THEN BA1.ID ELSE BA2.ID END AS ID,
				CASE WHEN BA2.ID IS NULL THEN BA1.NAME ELSE BA1.NAME || '-' || BA2.NAME END AS NAME,
				CASE WHEN BA2.ID IS NULL THEN BA1.SORT ELSE BA2.SORT END AS SORT
			FROM
				BUSI_AREA BA1
			LEFT JOIN
				BUSI_AREA BA2
			ON
				BA1.ID = BA2.PARENT_ID
			WHERE
				BA1.PARENT_ID IS NULL
		)
		ORDER BY
			SORT
	</select>
	<!-- 获取大商圈 -->
	<select id="getParentBusiAreaList" parameterType="map" resultType="busiAreaModel">
		SELECT
			BA.ID AS ID,
			BA.NAME AS BUSIAREANAME
		FROM
			BUSI_AREA BA
		<if test="areaId != null">
		LEFT JOIN
			BUSI_AREA_ADMIN BAA
		ON
			BA.ID = BAA.BUSI_AREA_ID
		</if>
		WHERE
			BA.PARENT_ID IS NULL
			<if test="areaId != null">
				AND BAA.ADMIN_ID = #{areaId}
			</if>
		ORDER BY
			SORT
	</select>
	<!-- 获取小商圈 -->
	<select id="getBusiAreaList" parameterType="map" resultType="busiAreaModel">
		SELECT
			BA.ID AS ID,
			BA.NAME AS BUSIAREANAME
		FROM
			BUSI_AREA BA
		<if test="areaId != null and areaId != ''">
		LEFT JOIN
			BUSI_AREA_ADMIN BAA
		ON
			BA.ID = BAA.BUSI_AREA_ID
		</if>
		WHERE
			BA.PARENT_ID = #{busiAreaParentId}
			<if test="areaId != null and areaId != ''">
				AND BAA.ADMIN_ID = #{areaId}
			</if>
		ORDER BY
			SORT
	</select>
	<!-- 获取区域下商圈数量 -->
	<select id="getAreaBusiCount" parameterType="map" resultType="busiAreaModel">
		select count(0) as count from busi_area_admin t where admin_id in (${rowIds})
	</select>
	<!-- 获取上商圈下的楼盘数 -->
	<select id="getPremisesCount" parameterType="map" resultType="java.lang.Integer">
		select count(0) from base_premises a where a.busi_area_id =#{busiAreaId}
	</select>
</mapper>